bgp:
  description: Top level bgp container for bgp configuration
  suboptions:
    instance:
      description: Top level bgp list with maximum number of instances 1
      elements: dict
      suboptions:
        address_family:
          description: List BGP address family that takes AFI and SAFI related configuration
          elements: dict
          suboptions:
            additional_paths:
              description: Container to configure additional path attributes for a
                peer.
              suboptions:
                best_count:
                  description: Best <2-3> paths in additional paths to be selected
                  required: false
                  type: int
                install:
                  description: Enabled BGP pic to install indirect nexthops into RIB
                  required: false
                  type: bool
                select_all:
                  description: Enable BGP add-path advertisement
                  required: false
                  type: bool
                type:
                  choices:
                  - receive
                  - send
                  description: Send/Receive additional paths to/from peers. Parameters
                    relating to the advertisement and receipt of multiple paths for
                    a single NLRI (add-paths)
                  elements: str
                  required: false
                  type: list
              type: dict
            afi:
              choices:
              - ipv4
              - ipv6
              - vpnv4
              - vpnv6
              - rtfilter
              - l2vpn
              - link-state
              - all
              description: 'Enter the IPv4, or VPNv4 address family mode allowing
                configuration of address-family specific parameters (Key for list:
                address-family)'
              required: true
              type: str
            aggregate_address:
              description: Configure BGP aggregate entries to to minimize the size
                of routing tables
              elements: dict
              suboptions:
                address:
                  description: 'Aggregate-prefix in prefix/length format (Key for
                    list: aggregate-address)'
                  required: true
                  type: str
                as_set:
                  description: As-set path parameter includes AS PATH information
                    in summaries or aggregate routes. Creates an aggregate address
                    with a mathematical set of autonomous systems (ASs). It summarizes
                    the AS_PATH attributes of all the individual routes
                  required: false
                  type: bool
                summary_only:
                  description: Summary-only path parameter advertises the prefix only,
                    suppressing the more-specific routes to all peers.
                  required: false
                  type: bool
              type: list
            allocate_label:
              description: Container to configure allocate-label attributes.
              suboptions:
                all:
                  description: Allocate label for all routes
                  required: false
                  type: bool
                implicit_null:
                  description: Enable PHP for local originated routes (network or
                    redistribution of connected routes
                  required: false
                  type: bool
                policy:
                  description: Allocate label for the routes specified by the route
                    map
                  required: false
                  type: str
              type: dict
            auto_summary:
              description: Enables sending summarized routes by a BGP speaker to its
                peers. Auto-summary can be enabled if certain routes have already
                been advertised; in this case, configuring auto-summary advertises
                the summarized routes first, then corresponding non-summarized routes
                are withdrawn.
              required: false
              type: bool
            network:
              description: Specify the network to be advertised by the BGP routing
                process
              elements: dict
              suboptions:
                address:
                  description: 'Network address to be announced in prefix/length format
                    (Key for list: network)'
                  required: true
                  type: str
                policy:
                  description: Routing Policy to apply to network
                  required: false
                  type: str
              type: list
            network_synchronization:
              description: Enables IGP synchronization of BGP networked routes.
              required: false
              type: bool
            pic:
              description: Enable/disable additional path installed for BGP route
              required: false
              type: bool
            redistribute:
              description: Inject routes from one routing process into another. Redistribution
                is used by routing protocols to advertise routes that are learned
                by some other means, such as by another routing protocol or by static
                routes
              elements: dict
              suboptions:
                instance:
                  description: Redistribute the routes from a specific OSPF/ISIS instance
                  elements: dict
                  suboptions:
                    policy:
                      description: Routing Policy to apply during redistribution
                      required: false
                      type: str
                    tag:
                      description: 'Tag could be instance id of OSPFv2, OSPFv3 or
                        ISIS (Key for list: instance)'
                      required: true
                      type: str
                  type: list
                policy:
                  description: Routing Policy to apply during redistribution
                  required: false
                  type: str
                protocol:
                  choices:
                  - kernel
                  - connected
                  - static
                  - rip
                  - isis
                  - ospf
                  description: 'Protocol to redistribute into BGP (Key for list: redistribute)'
                  required: true
                  type: str
              type: list
            route_reflector:
              description: Configure as route reflector for an address family
              required: false
              type: bool
            safi:
              choices:
              - unicast
              - multicast
              - labeled-unicast
              - l2vpn-vpls
              - evpn
              - vpn-unicast
              - rtfilter-unicast
              - link-state
              - all
              description: 'Configure sub address family such as unicast (Key for
                list: address-family)'
              required: true
              type: str
            segment_routing:
              choices:
              - enable
              - disable
              description: BGP SR enable/disable
              required: false
              type: str
            segment_routing_srv6:
              description: No description available
              suboptions:
                locator:
                  description: locator name
                  required: false
                  type: str
              type: dict
            synchronization:
              description: Perform IGP synchronization. Enables IGP synchronization
                of Internal BGP (iBGP) learned routes with the Internal Gateway Protocol
                (IGP) system. Synchronization is used when a BGP router should not
                advertise routes learned from iBGP neighbors, unless those routes
                are also present in an IGP (for example, OSPF).
              required: false
              type: bool
            table_map:
              description: Suppresses or modifies incoming BGP updates to Routing
                table installation based on the routing policy configured.
              suboptions:
                filter:
                  description: Filter the routes. If present, the incoming routes
                    are pruned as per the rule specified in route-map-name. If not,
                    it is used to alter the incoming packet information.
                  required: false
                  type: bool
                policy:
                  description: Name of the routemap to apply the filter to.
                  required: false
                  type: str
              type: dict
          type: list
        aigp_threshold:
          description: Readvertise AIGP value when IGP metric has increased/decreased
            beyond configured threshold percentage. Any IGP metric change within threshold
            percentage should not lead to AIGP re-advertisement. Value 0 indicates
            threshold is disabled and any IGP metric change should lead to readvertisement
            of AIGP value.
          required: false
          type: int
        as:
          description: 'Local autonomous system number. Uses the 32-bit as-number
            type from the model in RFC 6991. (Key for list: instance)'
          required: true
          type: int
        cluster_id:
          description: BGP route reflector cluster ID route-reflector cluster id to
            use when local router is configured as a route reflector. Commonly set
            at the group level, but allows a different cluster id to be set for each
            peer.
          required: false
          type: str
        extended_asn_cap:
          description: BGP ASN 4 bytes capability enable for BGP instance. It can
            be enabled with BGP as instance number more than 65535, all peers will
            be reset when modified.
          required: false
          type: bool
        fast_external_failover:
          description: Reset a BGP session immediately, if the interface used for
            BGP connection goes down.
          required: false
          type: bool
        graceful_restart:
          description: Container to enable graceful restart.
          suboptions:
            deferral_time:
              description: The maximum time a router which is restarting, will defer
                route-selection and advertisements to all its graceful-restart capable
                neighbors.
              required: false
              type: int
            enable:
              description: Enable graceful-restart capabilities.
              required: false
              type: bool
            restart_time:
              description: Estimated time (in seconds) for the local BGP speaker to
                restart a session. This value is advertised in the graceful restart
                BGP capability. This is a 12-bit value, referred to as Restart Time
                in RFC4724.
              required: false
              type: int
            stalepath_time:
              description: Maximum time to retain stale paths from restarting neighbors.
              required: false
              type: int
          type: dict
        hold_time:
          description: BGP holdtime 0|<1-65535> Time interval in seconds that a BGP
            session will be considered active in the absence of keepalive or other
            messages from the peer. The hold-time is typically set to 3x the keepalive-interval.
          required: false
          type: int
        inbound_route_filter:
          description: Enable the MPLS (Multiprotocol Label Switching) VPN/BGP inbound
            route filter. This is used to control the installation of routing information
            into the BGP table.
          required: false
          type: bool
        keepalive_interval:
          description: BGP keepalive time 0|<1-65535> Time interval in seconds between
            transmission of keepalive messages to the peer. Typically set to 1/3 the
            hold-time.
          required: false
          type: int
        l2vpn_vpls:
          description: L2VPN VPLS list containing L2VPN instance related configuration
            such as RD, RT and VPLS ID
          elements: dict
          suboptions:
            name:
              description: 'L2VPN services instance name. (Key for list: l2vpn-vpls)'
              required: true
              type: str
            route_distinguisher:
              description: Route distinguisher value. It uniquely generates L2VPN
                NLRI.
              required: false
              type: str
            route_target:
              description: Route target list that takes route target id and direction
              elements: dict
              suboptions:
                direction:
                  choices:
                  - import
                  - export
                  - both
                  description: Route-target direction, that can be imported/exported
                    for that particular route target ID.
                  required: true
                  type: str
                id:
                  description: 'Route-target ID. Creates lists of import and export
                    route-target extended communities for the L2VPN instance. It specifies
                    a target VPN extended community. Execute the once for each community.
                    All routes with the specific route-target extended community are
                    imported into all L2VPN instances with the same extended community
                    as an import route-target. (Key for list: route-target)'
                  required: true
                  type: str
              type: list
            vpls_id:
              description: "A VPLS ID is a BGP extended community value that identifies\
                \ the VPLS domain. Manual configuration of this ID is optional because\
                \ a default VPLS ID is generated using the BGP autonomous system number\
                \ and the configured VPN ID. A VPLS ID can be composed in one of three\
                \ ways; with an autonomous system number and an arbitrary number or\
                \ with an IP address and an arbitrary number. For example; \u2022\
                Enter type 0, a colon, a 16-bit autonomous system number, a colon,\
                \ and a 32-bit number. 0;45000;3 or \u2022Enter type 1, a colon ,\
                \ a 32-bit IP address, a colon, and a 16-bit number. 1;192.168.10.15;1\
                \ or \u2022Enter type 2, a colon, a 32-bit autonomous system number,\
                \ a colon, and a 16-bit number. 2;65536;3 ."
              required: false
              type: str
          type: list
        local_preference:
          description: BGP default local preference <0-4294967295> ,default value
            is 100 Local preference indicates the preferred path when there are multiple
            paths to the same destination
          required: false
          type: int
        log_peer_changes:
          description: Configure logging of peer state changes. Default is to enable
            logging of peer state changes.
          required: false
          type: bool
        mpls_resolution:
          description: Enable MPLS LSP resolution for BGP prefixes
          required: false
          type: bool
        next_hop_tracking:
          description: Container to enable next hop tracking
          suboptions:
            delay:
              description: The delay interval between routing table walks for nexthop
                delay tracking, after which BGP does a routing table scan on receiving
                a nexthop change trigger for nexthop updates. The time period determines
                how long BGP waits before it walks the full BGP table to determine
                which prefixes are affected by the nexthop changes, after it receives
                the trigger for nexthoop updates about one or more nexthop changes.
              required: false
              type: int
            enable:
              description: Nexthop address tracking is an event-driven notification
                system that monitors the status of routes installed in the Routing
                Information Base (RIB) and reports nexthop changes that affect internal
                BGP (iBGP) or external BGP (eBGP) prefixes directly to the BGP process.
                This improves the overall BGP convergence time, by allowing BGP to
                respond rapidly to nexthop changes for routes installed in the RIB.
                Default delay is 5 seconds
              required: false
              type: bool
          type: dict
        peer:
          description: List of peers with peer related configuration
          elements: dict
          suboptions:
            address:
              description: 'Address of the BGP peer, either in IPv4 or IPv6 (Key for
                list: peer)'
              required: true
              type: str
            address_family:
              description: Peer address family configuration such as vpnv4 unicast
              elements: dict
              suboptions:
                activate:
                  description: Whether the BGP peer is enabled. In cases where the
                    enabled leaf is set to false, the local system should not initiate
                    connections to the neighbor, and should not respond to TCP connections
                    attempts from the neighbor. If the state of the BGP session is
                    ESTABLISHED at the time that this leaf is set to false, the BGP
                    session should be ceased.
                  required: false
                  type: bool
                additional_paths:
                  description: Container to configure additional path attributes for
                    a peer.
                  suboptions:
                    best_count:
                      description: Best <2-3> paths in additional paths to be selected
                      required: false
                      type: int
                    select_all:
                      description: Enable BGP add-path advertisement
                      required: false
                      type: bool
                    type:
                      choices:
                      - receive
                      - send
                      - send-receive
                      - disable
                      description: Send/Receive additional paths to/from peers. Parameters
                        relating to the advertisement and receipt of multiple paths
                        for a single NLRI (add-paths)
                      required: false
                      type: str
                  type: dict
                advertise_ip_prefix:
                  description: Advertise VPNv4/VPNv6 prefixes (route type 5) under
                    L2VPN EVPN address family. BGP neighbors need to be cleared to
                    take effect.
                  elements: dict
                  suboptions:
                    afi:
                      choices:
                      - vpnv4
                      - vpnv6
                      description: 'VPNv4/VPNv6 address family (Key for list: advertise-ip-prefix)'
                      required: true
                      type: str
                  type: list
                afi:
                  description: 'IPv4, or VPNv4 address family mode allowing configuration
                    of address-family specific parameters (Key for list: address-family)'
                  required: true
                  type: str
                aigp:
                  description: AIGP behavior for the specified BGP neighbor or peer
                    group of the specified BGP instance (identified by AS number)
                    and address family.
                  suboptions:
                    enable:
                      description: To enable AIGP for a specific peer or peer-group.
                      required: false
                      type: bool
                    send:
                      description: Container for AIGP send. The send attribute is
                        used to interop with neighbor that does not support BGP AIGP
                        metric attribute, by translating the AIGP metric of a routes
                        to either MED or cost-community when such route is to be advertised
                        towards the neighbor.
                      suboptions:
                        community:
                          description: To enable translation of AIGP value to cost-community
                            value for the neighbor.
                          suboptions:
                            cost:
                              description: AIGP value to cost-community value for
                                the neighbor.
                              required: false
                              type: int
                            point_of_insertion:
                              choices:
                              - pre-bestpath
                              - igp-cost
                              description: Specifies the point of insertion, which
                                can be either igp-cost or pre-bestpath when selecting
                                BGP best path.
                              required: false
                              type: str
                            transitive:
                              description: Enable transitive cost community.
                              required: false
                              type: bool
                          type: dict
                        med:
                          description: To enable translation of AIGP value to MED(Multi
                            Exit Discriminator) value for the neighbor.
                          required: false
                          type: bool
                      type: dict
                  type: dict
                allow_as_in:
                  description: Ebgp Peers only. Allow AS number <1-10> advertise prefixes
                    (routes) even when the source of the prefixes is from the same
                    Autonomous System (AS) number.
                  required: false
                  type: int
                allow_ebgp_sr:
                  choices:
                  - enable
                  - disable
                  description: EBGP Peers only. Allow/Forbid prefix SID attribute
                  required: false
                  type: str
                allow_ebgp_vpn:
                  description: Ebgp Peers only. Allow VPN Routes
                  required: false
                  type: bool
                attribute_unchanged:
                  choices:
                  - as-path
                  - next-hop
                  - med
                  description: Advertise unchanged BGP attributes to the specified
                    peer.
                  elements: str
                  required: false
                  type: list
                default_originate:
                  description: The default originate is used to indicate that all
                    routes be sent regardless of the Route Target filter values.
                  required: false
                  type: bool
                default_originate_vpn:
                  description: Container to configure default-originate options for
                    VPN address families.
                  suboptions:
                    vrf:
                      description: VRF list containing VRF related configuration for
                        default-originate
                      elements: dict
                      suboptions:
                        name:
                          description: 'VRF binding to which the default route needs
                            to be originated. (Key for list: vrf)'
                          required: true
                          type: str
                      type: list
                  type: dict
                graceful_restart_helper:
                  choices:
                  - disable
                  - enable
                  description: Configure the router to advertise the Graceful Restart
                    Capability to the neighbors. This configuration indicates that
                    the BGP speaker has the ability to preserve its forwarding state
                    for the address family when BGP restarts.
                  required: false
                  type: str
                next_hop_self:
                  description: Configure the router as the next hop for a BGP-speaking
                    peer or peer group
                  required: false
                  type: bool
                orf_mode:
                  choices:
                  - both
                  - receive
                  - send
                  description: Enables Outbound Router Filtering (ORF) and advertises
                    the ORF capability to its neighbors. The ORFs send and receive
                    capabilities to lessen the number of updates exchanged between
                    neighbors. By filtering updates, this option minimizes generating
                    and processing of updates.
                  required: false
                  type: str
                policy:
                  description: Routing policy to be attached to this peer.
                  elements: dict
                  suboptions:
                    direction:
                      choices:
                      - in
                      - out
                      description: 'The direction of application of the route map
                        policy applies for the peer. (Key for list: policy)'
                      required: true
                      type: str
                    name:
                      description: 'Route map name associated with the leaf (Key for
                        list: policy)'
                      required: true
                      type: str
                  type: list
                prefix_limit:
                  description: Configure the maximum number of prefixes that will
                    be accepted from a peer
                  suboptions:
                    drop_excess:
                      description: Indicates the percentage of the maximum prefix-limit
                        value, which when exceeded, the excess routes are dropped
                      required: false
                      type: float
                    idle_timeout:
                      description: Idle-timeout (minimum 1 to maximum 2400 minutes)
                        specifies the time period after which the session is allowed
                        to re-establish. The value 0 represents no attempt to re-establish
                        the session until a clear bgp neighbor command is issued to
                        manually re-establish the session.
                      required: false
                      type: int
                    maximum_prefixes:
                      description: Maximum number of prefixes <1-4294967295> Maximum
                        number of prefixes that will be accepted from the neighbour
                      required: false
                      type: int
                    teardown_threshold:
                      description: Teardown percentage value <1-100> Warning messages
                        are logged and alerted to the admin when the number of prefixes
                        exceeds this configured percentage of the maximum prefix limit.
                      required: false
                      type: float
                    warning_only:
                      description: Using this option does not teardown the session,
                        but instead throws a notification warning that the threshold
                        has reached.
                      required: false
                      type: bool
                  type: dict
                prefix_list:
                  description: Container to attach prefix list to the neighbor
                  elements: dict
                  suboptions:
                    direction:
                      choices:
                      - in
                      - out
                      description: 'Direction of the filter (0=FILTER-IN |1=FILTER-OUT)
                        (Key for list: prefix-list)'
                      elements: str
                      required: true
                      type: list
                    name:
                      description: 'Prefix List name. specify a prefix list for filtering
                        BGP advertisements. (Key for list: prefix-list)'
                      required: true
                      type: str
                  type: list
                remove_private_as:
                  description: Remove private AS numbers from the outbound updates
                    and do not advertise these to the internet. This command is used
                    with eBgp peers only.
                  required: false
                  type: bool
                route_reflector_client:
                  description: Configure the peer as a route reflector client.
                  required: false
                  type: bool
                safi:
                  description: 'Configure sub address family such as unicast (Key
                    for list: address-family)'
                  required: true
                  type: str
                soft_reconfiguration_inbound:
                  description: Store updates for inbound soft reconfiguration. Soft-reconfiguration
                    may be used in lieu of BGP route refresh capability. Using this
                    enables local storage of all the received routes and their attributes.
                  required: false
                  type: bool
                unsuppress:
                  description: Selectively leak more-specific routes to a particular
                    neighbor.
                  suboptions:
                    policy:
                      description: Route map name associated with the leaf
                      required: false
                      type: str
                  type: dict
              type: list
            bfd:
              description: Configure bidirectional forwarding detection for BGP
              suboptions:
                enable:
                  description: Enable BFD for BGP.
                  required: false
                  type: bool
                multihop:
                  description: Configure multihop IP BFD for BGP.
                  required: false
                  type: bool
              type: dict
            connect_retry_interval:
              description: Time interval in seconds between attempts to establish
                a session with the peer.
              required: false
              type: int
            description:
              description: An optional textual description (intended primarily for
                use with a peer or group
              required: false
              type: str
            ebgp_multihop:
              description: Configuration parameters relating to ebgp multihop
              suboptions:
                enabled:
                  description: When enabled the referenced group or peers are permitted
                    to be indirectly connected - including cases where the TTL can
                    be decremented between the BGP peers
                  required: false
                  type: bool
                multihopttl:
                  description: Time-to-live value to use when packets are sent to
                    the referenced group or peers and ebgp-multihop is enabled
                  required: false
                  type: int
              type: dict
            graceful_restart:
              description: Container to enable graceful restart.
              suboptions:
                restart_time:
                  description: Estimated time (in seconds) for the local BGP speaker
                    to restart a session. This value is advertised in the graceful
                    restart BGP capability. This is a 12-bit value, referred to as
                    Restart Time in RFC4724.
                  required: false
                  type: int
              type: dict
            hold_time:
              description: Holdtime BGP holdtime 0|<3-65535> Time interval in seconds
                that a BGP session will be considered active in the absence of keepalive
                or other messages from the peer. The hold-time is typically set to
                3x the keepalive-interval.
              required: false
              type: int
            keepalive_interval:
              description: BGP keepalive time 0|<1-21845> Time interval in seconds
                between transmission of keepalive messages to the peer. Typically
                set to 1/3 the hold-time.
              required: false
              type: int
            local_as:
              description: The local-AS feature allows a router to appear to be a
                member of a second autonomous system (AS), in addition to its real
                AS. This feature can only be used for true eBGP peers.
              required: false
              type: int
            local_as_options:
              choices:
              - no-prepend
              - replace-as
              description: Local-as options; no-prepend - not prepend local-as to
                incoming updates from eBGP peers. replace-as - not prepend true-as
                to outgoing updates to eBGP peers.
              elements: list
              type: list
            lockout:
              description: BGP lockout feature is useful to inform/force its peer
                to avoid itself for any traffic for prefixes it has advertised to
                its neighbors. When a BGP neighbor (or through peer group) is locked
                out 1 iBGP routes are refreshed to the iBGP peer(s) with the path
                attribute changed to the lowest possible local preference (0) 2 eBGP
                routes advertised to the eBGP peer(s) are refreshed with the path
                attribute changed to highest possible MED (4294967295).
              required: false
              type: bool
            minimum_advertisement_interval:
              description: Minimum route advertisement interval <0-65535> Minimum
                time which must elapse between subsequent UPDATE messages relating
                to a common set of NLRI being transmitted to a peer. This timer is
                referred to as min-route-advertisement-interval-timer by RFC 4721
                and serves to reduce the number of UPDATE messages transmitted when
                a particular set of NLRI exhibit instability.
              required: false
              type: int
            passive:
              description: Wait for peers to issue requests to open a BGP session,
                rather than initiating sessions from the local router.
              required: false
              type: bool
            password:
              description: Configures an MD5 authentication password for use with
                peering devices. Must not exceed 80 characters.
              required: false
              type: str
            peer_group:
              description: Peer group configuration to be attached to this peer
              required: false
              type: str
            remote_as:
              description: Remote AS number for this peer
              required: false
              type: int
            shutdown:
              description: Terminate any active session for a specified peer and clear
                all related routing information. For peer groups large number of peering
                sessions will be terminated.
              required: false
              type: bool
            update_source_interface:
              description: Allows internal BGP sessions to use any operational interface
                for TCP connections
              required: false
              type: str
          type: list
        peer_group:
          description: List of peer groups and its related configuration
          elements: dict
          suboptions:
            address_family:
              description: Peer address family configuration such as vpnv4 unicast
              elements: dict
              suboptions:
                activate:
                  description: Whether the BGP peer is enabled. In cases where the
                    enabled leaf is set to false, the local system should not initiate
                    connections to the neighbor, and should not respond to TCP connections
                    attempts from the neighbor. If the state of the BGP session is
                    ESTABLISHED at the time that this leaf is set to false, the BGP
                    session should be ceased.
                  required: false
                  type: bool
                additional_paths:
                  description: Container to configure additional path attributes for
                    a peer.
                  suboptions:
                    best_count:
                      description: Best <2-3> paths in additional paths to be selected
                      required: false
                      type: int
                    select_all:
                      description: Enable BGP add-path advertisement
                      required: false
                      type: bool
                    type:
                      choices:
                      - receive
                      - send
                      - send-receive
                      - disable
                      description: Send/Receive additional paths to/from peers. Parameters
                        relating to the advertisement and receipt of multiple paths
                        for a single NLRI (add-paths)
                      required: false
                      type: str
                  type: dict
                advertise_ip_prefix:
                  description: Advertise VPNv4/VPNv6 prefixes (route type 5) under
                    L2VPN EVPN address family. BGP neighbors need to be cleared to
                    take effect.
                  elements: dict
                  suboptions:
                    afi:
                      choices:
                      - vpnv4
                      - vpnv6
                      description: 'VPNv4/VPNv6 address family (Key for list: advertise-ip-prefix)'
                      required: true
                      type: str
                  type: list
                afi:
                  description: 'IPv4, or VPNv4 address family mode allowing configuration
                    of address-family specific parameters (Key for list: address-family)'
                  required: true
                  type: str
                aigp:
                  description: AIGP behavior for the specified BGP neighbor or peer
                    group of the specified BGP instance (identified by AS number)
                    and address family.
                  suboptions:
                    enable:
                      description: To enable AIGP for a specific peer or peer-group.
                      required: false
                      type: bool
                    send:
                      description: Container for AIGP send. The send attribute is
                        used to interop with neighbor that does not support BGP AIGP
                        metric attribute, by translating the AIGP metric of a routes
                        to either MED or cost-community when such route is to be advertised
                        towards the neighbor.
                      suboptions:
                        community:
                          description: To enable translation of AIGP value to cost-community
                            value for the neighbor.
                          suboptions:
                            cost:
                              description: AIGP value to cost-community value for
                                the neighbor.
                              required: false
                              type: int
                            point_of_insertion:
                              choices:
                              - pre-bestpath
                              - igp-cost
                              description: Specifies the point of insertion, which
                                can be either igp-cost or pre-bestpath when selecting
                                BGP best path.
                              required: false
                              type: str
                            transitive:
                              description: Enable transitive cost community.
                              required: false
                              type: bool
                          type: dict
                        med:
                          description: To enable translation of AIGP value to MED(Multi
                            Exit Discriminator) value for the neighbor.
                          required: false
                          type: bool
                      type: dict
                  type: dict
                allow_as_in:
                  description: Ebgp Peers only. Allow AS number <1-10> advertise prefixes
                    (routes) even when the source of the prefixes is from the same
                    Autonomous System (AS) number.
                  required: false
                  type: int
                allow_ebgp_sr:
                  choices:
                  - enable
                  - disable
                  description: EBGP Peers only. Allow/Forbid prefix SID attribute
                  required: false
                  type: str
                allow_ebgp_vpn:
                  description: Ebgp Peers only. Allow VPN Routes
                  required: false
                  type: bool
                attribute_unchanged:
                  choices:
                  - as-path
                  - next-hop
                  - med
                  description: Advertise unchanged BGP attributes to the specified
                    peer.
                  elements: str
                  required: false
                  type: list
                default_originate:
                  description: The default originate is used to indicate that all
                    routes be sent regardless of the Route Target filter values.
                  required: false
                  type: bool
                default_originate_vpn:
                  description: Container to configure default-originate options for
                    VPN address families.
                  suboptions:
                    vrf:
                      description: VRF list containing VRF related configuration for
                        default-originate
                      elements: dict
                      suboptions:
                        name:
                          description: 'VRF binding to which the default route needs
                            to be originated. (Key for list: vrf)'
                          required: true
                          type: str
                      type: list
                  type: dict
                graceful_restart_helper:
                  choices:
                  - disable
                  - enable
                  description: Configure the router to advertise the Graceful Restart
                    Capability to the neighbors. This configuration indicates that
                    the BGP speaker has the ability to preserve its forwarding state
                    for the address family when BGP restarts.
                  required: false
                  type: str
                next_hop_self:
                  description: Configure the router as the next hop for a BGP-speaking
                    peer or peer group
                  required: false
                  type: bool
                orf_mode:
                  choices:
                  - both
                  - receive
                  - send
                  description: Enables Outbound Router Filtering (ORF) and advertises
                    the ORF capability to its neighbors. The ORFs send and receive
                    capabilities to lessen the number of updates exchanged between
                    neighbors. By filtering updates, this option minimizes generating
                    and processing of updates.
                  required: false
                  type: str
                policy:
                  description: Routing policy to be attached to this peer.
                  elements: dict
                  suboptions:
                    direction:
                      choices:
                      - in
                      - out
                      description: 'The direction of application of the route map
                        policy applies for the peer. (Key for list: policy)'
                      required: true
                      type: str
                    name:
                      description: 'Route map name associated with the leaf (Key for
                        list: policy)'
                      required: true
                      type: str
                  type: list
                prefix_limit:
                  description: Configure the maximum number of prefixes that will
                    be accepted from a peer
                  suboptions:
                    drop_excess:
                      description: Indicates the percentage of the maximum prefix-limit
                        value, which when exceeded, the excess routes are dropped
                      required: false
                      type: float
                    idle_timeout:
                      description: Idle-timeout (minimum 1 to maximum 2400 minutes)
                        specifies the time period after which the session is allowed
                        to re-establish. The value 0 represents no attempt to re-establish
                        the session until a clear bgp neighbor command is issued to
                        manually re-establish the session.
                      required: false
                      type: int
                    maximum_prefixes:
                      description: Maximum number of prefixes <1-4294967295> Maximum
                        number of prefixes that will be accepted from the neighbour
                      required: false
                      type: int
                    teardown_threshold:
                      description: Teardown percentage value <1-100> Warning messages
                        are logged and alerted to the admin when the number of prefixes
                        exceeds this configured percentage of the maximum prefix limit.
                      required: false
                      type: float
                    warning_only:
                      description: Using this option does not teardown the session,
                        but instead throws a notification warning that the threshold
                        has reached.
                      required: false
                      type: bool
                  type: dict
                prefix_list:
                  description: Container to attach prefix list to the neighbor
                  elements: dict
                  suboptions:
                    direction:
                      choices:
                      - in
                      - out
                      description: 'Direction of the filter (0=FILTER-IN |1=FILTER-OUT)
                        (Key for list: prefix-list)'
                      elements: str
                      required: true
                      type: list
                    name:
                      description: 'Prefix List name. specify a prefix list for filtering
                        BGP advertisements. (Key for list: prefix-list)'
                      required: true
                      type: str
                  type: list
                remove_private_as:
                  description: Remove private AS numbers from the outbound updates
                    and do not advertise these to the internet. This command is used
                    with eBgp peers only.
                  required: false
                  type: bool
                route_reflector_client:
                  description: Configure the peer as a route reflector client.
                  required: false
                  type: bool
                safi:
                  description: 'Configure sub address family such as unicast (Key
                    for list: address-family)'
                  required: true
                  type: str
                soft_reconfiguration_inbound:
                  description: Store updates for inbound soft reconfiguration. Soft-reconfiguration
                    may be used in lieu of BGP route refresh capability. Using this
                    enables local storage of all the received routes and their attributes.
                  required: false
                  type: bool
                unsuppress:
                  description: Selectively leak more-specific routes to a particular
                    neighbor.
                  suboptions:
                    policy:
                      description: Route map name associated with the leaf
                      required: false
                      type: str
                  type: dict
              type: list
            bfd:
              description: Configure bidirectional forwarding detection for BGP peer
                group
              suboptions:
                enable:
                  description: Enable BFD for BGP.
                  required: false
                  type: bool
                multihop:
                  description: Configure multihop IP BFD for BGP.
                  required: false
                  type: bool
              type: dict
            connect_retry_interval:
              description: Time interval in seconds between attempts to establish
                a session with the peer.
              required: false
              type: int
            description:
              description: An optional textual description (intended primarily for
                use with a peer or group
              required: false
              type: str
            ebgp_multihop:
              description: Configuration parameters relating to ebgp multihop
              suboptions:
                enabled:
                  description: When enabled the referenced group or peers are permitted
                    to be indirectly connected - including cases where the TTL can
                    be decremented between the BGP peers
                  required: false
                  type: bool
                multihopttl:
                  description: Time-to-live value to use when packets are sent to
                    the referenced group or peers and ebgp-multihop is enabled
                  required: false
                  type: int
              type: dict
            graceful_restart:
              description: Container to enable graceful restart.
              suboptions:
                restart_time:
                  description: Estimated time (in seconds) for the local BGP speaker
                    to restart a session. This value is advertised in the graceful
                    restart BGP capability. This is a 12-bit value, referred to as
                    Restart Time in RFC4724.
                  required: false
                  type: int
              type: dict
            hold_time:
              description: Holdtime BGP holdtime 0|<3-65535> Time interval in seconds
                that a BGP session will be considered active in the absence of keepalive
                or other messages from the peer. The hold-time is typically set to
                3x the keepalive-interval.
              required: false
              type: int
            keepalive_interval:
              description: BGP keepalive time 0|<1-21845> Time interval in seconds
                between transmission of keepalive messages to the peer. Typically
                set to 1/3 the hold-time.
              required: false
              type: int
            local_as:
              description: The local-AS feature allows a router to appear to be a
                member of a second autonomous system (AS), in addition to its real
                AS. This feature can only be used for true eBGP peers.
              required: false
              type: int
            local_as_options:
              choices:
              - no-prepend
              - replace-as
              description: Local-as options; no-prepend - not prepend local-as to
                incoming updates from eBGP peers. replace-as - not prepend true-as
                to outgoing updates to eBGP peers.
              elements: list
              type: list
            lockout:
              description: BGP lockout feature is useful to inform/force its peer
                to avoid itself for any traffic for prefixes it has advertised to
                its neighbors. When a BGP neighbor (or through peer group) is locked
                out 1 iBGP routes are refreshed to the iBGP peer(s) with the path
                attribute changed to the lowest possible local preference (0) 2 eBGP
                routes advertised to the eBGP peer(s) are refreshed with the path
                attribute changed to highest possible MED (4294967295).
              required: false
              type: bool
            minimum_advertisement_interval:
              description: Minimum route advertisement interval <0-65535> Minimum
                time which must elapse between subsequent UPDATE messages relating
                to a common set of NLRI being transmitted to a peer. This timer is
                referred to as min-route-advertisement-interval-timer by RFC 4721
                and serves to reduce the number of UPDATE messages transmitted when
                a particular set of NLRI exhibit instability.
              required: false
              type: int
            name:
              description: 'Name of the peer group template that can be attached to
                a peer (Key for list: peer-group)'
              required: true
              type: str
            passive:
              description: Wait for peers to issue requests to open a BGP session,
                rather than initiating sessions from the local router.
              required: false
              type: bool
            password:
              description: Configures an MD5 authentication password for use with
                peering devices. Must not exceed 80 characters.
              required: false
              type: str
            remote_as:
              description: Remote AS number for this peer group
              required: false
              type: int
            shutdown:
              description: Terminate any active session for a specified peer and clear
                all related routing information. For peer groups large number of peering
                sessions will be terminated.
              required: false
              type: bool
            update_source_interface:
              description: Allows internal BGP sessions to use any operational interface
                for TCP connections
              required: false
              type: str
          type: list
        route_selection_options:
          description: Parameters relating to options for route selection
          suboptions:
            aigp_ignore:
              description: Ignore AIGP value for best path selection.
              required: false
              type: bool
            always_compare_med:
              description: Compare multi-exit discriminator (MED) value from different
                ASes when selecting the best route. The default behavior is to only
                compare MEDs for paths received from the same AS.
              required: false
              type: bool
            deterministic_med:
              description: Compares the Multi Exit Discriminator (MED) variable when
                choosing among routes advertised by different peers in the same autonomous
                system. MED is compared after BGP attributes weight, local preference,
                AS-path and origin have been compared and are equal.
              required: false
              type: bool
            external_compare_router_id:
              description: When comparing similar routes received from external BGP
                peers, use the router-id as a criterion to select the active path.
              required: false
              type: bool
            ignore_as_path_length:
              description: Ignore the AS path length when selecting the best path.
                The default is to use the AS path length and prefer paths with shorter
                length.
              required: false
              type: bool
            tie_break_on_age:
              description: Prefer old routes when compare-router-id is not set.
              required: false
              type: bool
          type: dict
        router_id:
          description: Router id - an unsigned 32-bit integer expressed in dotted
            quad notation.
          required: false
          type: str
        scan_time:
          description: Configure background scanner interval in seconds.
          required: false
          type: int
        segment_routing:
          description: Attribute for MPLS-based segment routing for a BGP process.
          suboptions:
            srgb:
              description: List of global blocks to be advertised.
              elements: dict
              suboptions:
                lower_bound:
                  description: 'Lower value in the block. (Key for list: srgb)'
                  required: true
                  type: int
                upper_bound:
                  description: 'Upper value in the block. (Key for list: srgb)'
                  required: true
                  type: int
              type: list
            srv6:
              description: No description available
              suboptions:
                locator:
                  description: locator name
                  required: false
                  type: str
              type: dict
          type: dict
        vrf:
          description: Vrf list containing vrf related configuration such as rd, rt
            and peer
          elements: dict
          suboptions:
            name:
              description: 'Provides bgp address family to parent VRF binding. (Key
                for list: vrf)'
              required: true
              type: str
            route_distinguisher:
              description: A route distinguisher is an 8-octet value used to distinguish
                routes from different BGP VPNs (RFC 4364). A route distinguisher consists
                of three fields; A 2-octet type field, an administrator field, and
                an assigned number field. According to the data formats for type 0,
                1, and 2 defined in RFC4364, the encoding pattern is defined as; 0;2-octet-asn;4-octet-number
                1;4-octet-ipv4addr;2-octet-number 2;4-octet-asn;2-octet-number. 2-octet-other-hex-number;6-octet-hex-number
                Some valid examples are; 0;100;100, 1;1.1.1.1;100, and 2;1234567890;203.
              required: true
              type: str
            route_target:
              description: Route Target list that takes route target id and direction
              elements: dict
              suboptions:
                direction:
                  choices:
                  - import
                  - export
                  - both
                  description: Route-target direction, that can be imported/exported
                    for that particular route target id.
                  required: true
                  type: str
                id:
                  description: 'A route target is an 8-octet BGP extended community
                    initially identifying a set of sites in a BGP VPN (RFC 4364).
                    However, it has since taken on a more general role in BGP route
                    filtering. A route target consists of three fields; a 2-octet
                    type field, an administrator field, and an assigned number field.
                    According to the data formats for type 0, 1, and 2 defined in
                    RFC4360 and RFC5668, the encoding pattern is defined as; 0;2-octet-asn;4-octet-number
                    1;4-octet-ipv4addr;2-octet-number 2;4-octet-asn;2-octet-number.
                    Some valid examples are; 0;100;100, 1;1.1.1.1;100, and 2;1234567890;203.
                    (Key for list: route-target)'
                  required: true
                  type: str
              type: list
            vrf_address_family:
              description: List of vrf address families such as ipv4 unicast
              elements: dict
              suboptions:
                afi:
                  choices:
                  - ipv4
                  - ipv6
                  description: 'Vrf Address Family type enter the IPv4, address family
                    mode allowing configuration of address-family specific parameters
                    (Key for list: vrf-address-family)'
                  required: true
                  type: str
                aggregate_address:
                  description: Configure BGP aggregate entries to to minimize the
                    size of routing tables
                  elements: dict
                  suboptions:
                    address:
                      description: 'Aggregate-prefix in prefix/length format (Key
                        for list: aggregate-address)'
                      required: true
                      type: str
                    as_set:
                      description: As-set path parameter includes AS PATH information
                        in summaries or aggregate routes. Creates an aggregate address
                        with a mathematical set of autonomous systems (ASs). It summarizes
                        the AS_PATH attributes of all the individual routes
                      required: false
                      type: bool
                    summary_only:
                      description: Summary-only path parameter advertises the prefix
                        only, suppressing the more-specific routes to all peers.
                      required: false
                      type: bool
                  type: list
                auto_summary:
                  description: Enables sending summarized routes by a BGP speaker
                    to its peers. Auto-summary can be enabled if certain routes have
                    already been advertised; in this case, configuring auto-summary
                    advertises the summarized routes first, then corresponding non-summarized
                    routes are withdrawn.
                  required: false
                  type: bool
                network:
                  description: Specify the network to be advertised by the BGP routing
                    process
                  elements: dict
                  suboptions:
                    address:
                      description: 'Network address to be announced in prefix/length
                        format (Key for list: network)'
                      required: true
                      type: str
                    policy:
                      description: Routing Policy to apply to network
                      required: false
                      type: str
                  type: list
                network_synchronization:
                  description: Enables IGP synchronization of BGP networked routes.
                  required: false
                  type: bool
                peer:
                  description: List of vrf peer related configuration information
                  elements: dict
                  suboptions:
                    activate:
                      description: Whether the BGP peer is enabled. In cases where
                        the enabled leaf is set to false, the local system should
                        not initiate connections to the neighbor, and should not respond
                        to TCP connections attempts from the neighbor. If the state
                        of the BGP session is ESTABLISHED at the time that this leaf
                        is set to false, the BGP session should be ceased.
                      required: false
                      type: bool
                    address:
                      description: 'Address of the BGP peer, either in IPv4 or IPv6
                        (Key for list: peer)'
                      required: true
                      type: str
                    aigp:
                      description: AIGP behavior for the specified BGP neighbor or
                        peer group of the specified BGP instance (identified by AS
                        number) and address family.
                      suboptions:
                        enable:
                          description: To enable AIGP for a specific peer or peer-group.
                          required: false
                          type: bool
                        send:
                          description: Container for AIGP send. The send attribute
                            is used to interop with neighbor that does not support
                            BGP AIGP metric attribute, by translating the AIGP metric
                            of a routes to either MED or cost-community when such
                            route is to be advertised towards the neighbor.
                          suboptions:
                            community:
                              description: To enable translation of AIGP value to
                                cost-community value for the neighbor.
                              suboptions:
                                cost:
                                  description: AIGP value to cost-community value
                                    for the neighbor.
                                  required: false
                                  type: int
                                point_of_insertion:
                                  choices:
                                  - pre-bestpath
                                  - igp-cost
                                  description: Specifies the point of insertion, which
                                    can be either igp-cost or pre-bestpath when selecting
                                    BGP best path.
                                  required: false
                                  type: str
                                transitive:
                                  description: Enable transitive cost community.
                                  required: false
                                  type: bool
                              type: dict
                            med:
                              description: To enable translation of AIGP value to
                                MED(Multi Exit Discriminator) value for the neighbor.
                              required: false
                              type: bool
                          type: dict
                      type: dict
                    allow_as_in:
                      description: Ebgp Peers only. Allow AS number <1-10> advertise
                        prefixes (routes) even when the source of the prefixes is
                        from the same Autonomous System (AS) number.
                      required: false
                      type: int
                    allow_ebgp_vpn:
                      description: Ebgp Peers only. Allow VPN Routes
                      required: false
                      type: bool
                    as_override:
                      description: "Override the Autonomous System Number (ASN) of\
                        \ a site with the ASN of a provider. BGP normally ignores\
                        \ the routes from the same AS. However, this capability is\
                        \ used to override the customer\u2018s ASN in BGP, so that\
                        \ the customer CE accepts and installs routes from the same\
                        \ AS."
                      required: false
                      type: bool
                    attribute_unchanged:
                      choices:
                      - as-path
                      - next-hop
                      - med
                      description: Advertise unchanged BGP attributes to the specified
                        peer.
                      elements: str
                      required: false
                      type: list
                    bfd:
                      description: Configure bidirectional forwarding detection for
                        BGP.
                      suboptions:
                        enable:
                          description: Enable BFD for BGP.
                          required: false
                          type: bool
                        multihop:
                          description: Configure multihop IP BFD for BGP.
                          required: false
                          type: bool
                      type: dict
                    connect_retry_interval:
                      description: Time interval in seconds between attempts to establish
                        a session with the peer.
                      required: false
                      type: int
                    description:
                      description: An optional textual description (intended primarily
                        for use with a peer or group
                      required: false
                      type: str
                    ebgp_multihop:
                      description: Configuration parameters relating to ebgp multihop
                      suboptions:
                        enabled:
                          description: When enabled the referenced group or peers
                            are permitted to be indirectly connected - including cases
                            where the TTL can be decremented between the BGP peers
                          required: false
                          type: bool
                        multihop_ttl:
                          description: Time-to-live value to use when packets are
                            sent to the referenced group or peers and ebgp-multihop
                            is enabled
                          required: false
                          type: int
                      type: dict
                    graceful_restart:
                      description: Container to enable graceful restart.
                      suboptions:
                        restart_time:
                          description: Estimated time (in seconds) for the local BGP
                            speaker to restart a session. This value is advertised
                            in the graceful restart BGP capability. This is a 12-bit
                            value, referred to as Restart Time in RFC4724.
                          required: false
                          type: int
                      type: dict
                    graceful_restart_helper:
                      choices:
                      - disable
                      - enable
                      description: Configure the router to advertise the Graceful
                        Restart Capability to the neighbors. This configuration indicates
                        that the BGP speaker has the ability to preserve its forwarding
                        state for the address family when BGP restarts.
                      required: false
                      type: str
                    hold_time:
                      description: Time interval in seconds that a BGP session will
                        be considered active in the absence of keepalive or other
                        messages from the peer. The hold-time is typically set to
                        3x the keepalive-interval.
                      required: false
                      type: int
                    keepalive_interval:
                      description: BGP keepalive time 0|<3-65535> Time interval in
                        seconds between transmission of keepalive messages to the
                        peer. Typically set to 1/3 the hold-time.
                      required: false
                      type: int
                    local_as:
                      description: The local-AS feature allows a router to appear
                        to be a member of a second autonomous system (AS), in addition
                        to its real AS. This feature can only be used for true eBGP
                        peers.
                      required: false
                      type: int
                    local_as_options:
                      choices:
                      - no-prepend
                      - replace-as
                      description: Local-as options; no-prepend - not prepend local-as
                        to incoming updates from eBGP peers. replace-as - not prepend
                        true-as to outgoing updates to eBGP peers.
                      elements: list
                      type: list
                    lockout:
                      description: BGP lockout feature is useful to inform/force its
                        peer to avoid itself for any traffic for prefixes it has advertised
                        to its neighbors. When a BGP neighbor (or through peer group)
                        is locked out 1 iBGP routes are refreshed to the iBGP peer(s)
                        with the path attribute changed to the lowest possible local
                        preference (0) 2 eBGP routes advertised to the eBGP peer(s)
                        are refreshed with the path attribute changed to highest possible
                        MED (4294967295).
                      required: false
                      type: bool
                    minimum_advertisement_interval:
                      description: Minimum route advertisement interval <0-65535>
                        Minimum time which must elapse between subsequent UPDATE messages
                        relating to a common set of NLRI being transmitted to a peer.
                        This timer is referred to as min-route-advertisement-interval-timer
                        by RFC 4721 and serves to reduce the number of UPDATE messages
                        transmitted when a particular set of NLRI exhibit instability.
                      required: false
                      type: int
                    orf_mode:
                      choices:
                      - both
                      - receive
                      - send
                      description: Enables Outbound Router Filtering (ORF) and advertises
                        the ORF capability to its neighbors. The ORFs send and receive
                        capabilities to lessen the number of updates exchanged between
                        neighbors. By filtering updates, this option minimizes generating
                        and processing of updates.
                      required: false
                      type: str
                    passive:
                      description: Wait for peers to issue requests to open a BGP
                        session, rather than initiating sessions from the local router.
                      required: false
                      type: bool
                    password:
                      description: Configures an MD5 authentication password for use
                        with peering devices. Must not exceed 80 characters.
                      required: false
                      type: str
                    policy:
                      description: Routing policy to be attached to this peer.
                      elements: dict
                      suboptions:
                        direction:
                          choices:
                          - in
                          - out
                          description: 'The direction of application of the route
                            map policy applies for the peer. (Key for list: policy)'
                          required: true
                          type: str
                        name:
                          description: 'Route map name associated with the leaf (Key
                            for list: policy)'
                          required: true
                          type: str
                      type: list
                    prefix_limit:
                      description: Configure the maximum number of prefixes that will
                        be accepted from a peer
                      suboptions:
                        drop_excess:
                          description: Indicates the percentage of the maximum prefix-limit
                            value, which when exceeded, the excess routes are dropped
                          required: false
                          type: float
                        idle_timeout:
                          description: Idle-timeout (minimum 1 to maximum 2400 minutes)
                            specifies the time period after which the session is allowed
                            to re-establish. The value 0 represents no attempt to
                            re-establish the session until a clear bgp neighbor command
                            is issued to manually re-establish the session.
                          required: false
                          type: int
                        maximum_prefixes:
                          description: Maximum number of prefixes <1-4294967295> Maximum
                            number of prefixes that will be accepted from the neighbour
                          required: false
                          type: int
                        teardown_threshold:
                          description: Teardown percentage value <1-100> Warning messages
                            are logged and alerted to the admin when the number of
                            prefixes exceeds this configured percentage of the maximum
                            prefix limit.
                          required: false
                          type: float
                        warning_only:
                          description: Using this option does not teardown the session,
                            but instead throws a notification warning that the threshold
                            has reached.
                          required: false
                          type: bool
                      type: dict
                    prefix_list:
                      description: Container to attach prefix list to the neighbor
                      elements: dict
                      suboptions:
                        direction:
                          choices:
                          - in
                          - out
                          description: 'Direction of the filter (0=FILTER-IN |1=FILTER-OUT)
                            (Key for list: prefix-list)'
                          elements: str
                          required: true
                          type: list
                        name:
                          description: 'Prefix List name. specify a prefix list for
                            filtering BGP advertisements. (Key for list: prefix-list)'
                          required: true
                          type: str
                      type: list
                    remote_as:
                      description: Remote AS number for this peer
                      required: true
                      type: int
                    remove_private_as:
                      description: Remove private AS numbers from the outbound updates
                        and do not advertise these to the internet. This command is
                        used with eBgp peers only.
                      required: false
                      type: bool
                    route_reflector_client:
                      description: Configure the peer as a route reflector client.
                      required: false
                      type: bool
                    shutdown:
                      description: Enabling will terminate any active sessions and
                        removes all associated routing information for the peer while
                        maintaining all the configuration associated with the peer.
                        In addition, the specified peer transitions administratively
                        to idle state.
                      required: false
                      type: bool
                    site_origin_id:
                      description: Enable the site-of-origin (SOO) feature. If the
                        customer AS is multi-homed to the ISP, this ensures that the
                        PE does not advertise the routes back to the same AS.
                      required: false
                      type: str
                    soft_reconfiguration_inbound:
                      description: Store updates for inbound soft reconfiguration.
                        Soft-reconfiguration may be used in lieu of BGP route refresh
                        capability. Using this enables local storage of all the received
                        routes and their attributes.
                      required: false
                      type: bool
                    unsuppress:
                      description: Selectively leak more-specific routes to a particular
                        neighbor.
                      suboptions:
                        policy:
                          description: Route map name associated with the leaf
                          required: false
                          type: str
                      type: dict
                    update_source_interface:
                      description: Allows internal BGP sessions to use any operational
                        interface for TCP connections
                      required: false
                      type: str
                  type: list
                redistribute:
                  description: Inject routes from one routing process into another.
                    Redistribution is used by routing protocols to advertise routes
                    that are learned by some other means, such as by another routing
                    protocol or by static routes
                  elements: dict
                  suboptions:
                    instance:
                      description: Redistribute the routes from a specific OSPF/ISIS
                        instance
                      elements: dict
                      suboptions:
                        policy:
                          description: Routing Policy to apply during redistribution
                          required: false
                          type: str
                        tag:
                          description: 'Tag could be instance id of OSPFv2, OSPFv3
                            or ISIS (Key for list: instance)'
                          required: true
                          type: str
                      type: list
                    policy:
                      description: Routing Policy to apply during redistribution
                      required: false
                      type: str
                    protocol:
                      choices:
                      - kernel
                      - connected
                      - static
                      - rip
                      - isis
                      - ospf
                      description: 'Protocol to redistribute into BGP (Key for list:
                        redistribute)'
                      required: true
                      type: str
                  type: list
                route_target:
                  description: Route Target list that takes route target id and direction
                  elements: dict
                  suboptions:
                    direction:
                      choices:
                      - import
                      - export
                      - both
                      description: Route-target direction, that can be imported/exported
                        for that particular route target id.
                      required: true
                      type: str
                    id:
                      description: 'A route target is an 8-octet BGP extended community
                        initially identifying a set of sites in a BGP VPN (RFC 4364).
                        However, it has since taken on a more general role in BGP
                        route filtering. A route target consists of three fields;
                        a 2-octet type field, an administrator field, and an assigned
                        number field. According to the data formats for type 0, 1,
                        and 2 defined in RFC4360 and RFC5668, the encoding pattern
                        is defined as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number
                        2;4-octet-asn;2-octet-number. Some valid examples are; 0;100;100,
                        1;1.1.1.1;100, and 2;65535;100. (Key for list: route-target)'
                      required: true
                      type: str
                  type: list
                safi:
                  choices:
                  - unicast
                  description: 'VRF SAFI type. Configure sub address family such as
                    unicast (Key for list: vrf-address-family)'
                  required: true
                  type: str
                segment_routing_srv6:
                  description: No description available
                  suboptions:
                    locator:
                      description: locator name
                      required: false
                      type: str
                  type: dict
                synchronization:
                  description: Perform IGP synchronization. Enables IGP synchronization
                    of Internal BGP (iBGP) learned routes with the Internal Gateway
                    Protocol (IGP) system. Synchronization is used when a BGP router
                    should not advertise routes learned from iBGP neighbors, unless
                    those routes are also present in an IGP (for example, OSPF).
                  required: false
                  type: bool
              type: list
          type: list
      type: list
  type: dict
