routing_policy:
  description: Policy based routing
  suboptions:
    bgp:
      description: BGP communities, extended communities, as-path and large-community-lists.
      suboptions:
        as_path_lists:
          description: AS path list.
          suboptions:
            as_path_list:
              description: AS paths that are used in match conditions under policy.
              elements: dict
              suboptions:
                member:
                  description: AS paths member list to permit/deny a regular-expression.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the extended AS path
                        list. (Key for list: member)'
                      required: true
                      type: str
                    value:
                      description: 'Regular-expression to match the BGP AS paths.
                        (Key for list: member)'
                      required: true
                      type: str
                  type: list
                name:
                  description: 'Name of the AS path list. (Key for list: as-path-list)'
                  required: true
                  type: str
              type: list
          type: dict
        community_lists:
          description: Community List.
          suboptions:
            community_list:
              description: Communities that are used in match conditions under policy.
              elements: dict
              suboptions:
                name:
                  description: 'Name of the community list. (Key for list: community-list)'
                  required: true
                  type: str
                regex:
                  description: Permit or deny a commmunity with matching regular expression.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny community matching regular
                        expression. (Key for list: regex)'
                      required: true
                      type: str
                    value:
                      description: 'Regular expression for matching commmunity. (Key
                        for list: regex)'
                      required: true
                      type: str
                  type: list
                standard:
                  description: Permit or deny a standard commmunity type.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the standard community
                        type. (Key for list: standard)'
                      required: true
                      type: str
                    value:
                      description: 'Value for standard community type. (Key for list:
                        standard)'
                      required: true
                      type: str
                  type: list
                well_known:
                  description: Permit or deny a well-known commmunity type.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the well-known community
                        type. (Key for list: well-known)'
                      required: true
                      type: str
                    value:
                      choices:
                      - no-export
                      - no-advertise
                      - local-AS
                      - internet
                      description: 'Value for well-known community type. (Key for
                        list: well-known)'
                      elements: str
                      required: true
                      type: list
                  type: list
              type: list
          type: dict
        ext_community_lists:
          description: Extended community list.
          suboptions:
            ext_community_list:
              description: Extended communities that are used in match conditions
                under policy.
              elements: dict
              suboptions:
                color:
                  description: Permit or deny a color extended community.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the extended community
                        type. (Key for list: color)'
                      required: true
                      type: str
                    value:
                      description: 'Value for color extended community. (Key for list:
                        color)'
                      required: true
                      type: int
                  type: list
                name:
                  description: 'Name of the extended community list. (Key for list:
                    ext-community-list)'
                  required: true
                  type: str
                regex:
                  description: Permit or deny extended community with matching regular
                    expression.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the extended community
                        with matching regular expression. (Key for list: regex)'
                      required: true
                      type: str
                    value:
                      description: 'Regular expression for matching extended community.
                        (Key for list: regex)'
                      required: true
                      type: str
                  type: list
                route_target:
                  description: Permit or deny a route target extended community.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the extended community
                        type. (Key for list: route-target)'
                      required: true
                      type: str
                    value:
                      description: 'Value for route target or site of origin. (Key
                        for list: route-target)'
                      required: true
                      type: str
                  type: list
                site_of_origin:
                  description: Permit or deny a site of origin extended community.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the extended community
                        type. (Key for list: site-of-origin)'
                      required: true
                      type: str
                    value:
                      description: 'Value for site of origin extended community. (Key
                        for list: site-of-origin)'
                      required: true
                      type: str
                  type: list
              type: list
          type: dict
        large_community_lists:
          description: Large community List.
          suboptions:
            large_community_list:
              description: Large communities that are used in match conditions under
                policy.
              elements: dict
              suboptions:
                name:
                  description: 'Name of the large community list. (Key for list: large-community-list)'
                  required: true
                  type: str
                regex:
                  description: Permit or deny a large commmunity with matching regular
                    expression.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny large community matching
                        regular expression. (Key for list: regex)'
                      required: true
                      type: str
                    value:
                      description: 'Regular expression for matching large commmunity.
                        (Key for list: regex)'
                      required: true
                      type: str
                  type: list
                standard:
                  description: Permit or deny a standard large commmunity type.
                  elements: dict
                  suboptions:
                    action:
                      choices:
                      - deny
                      - permit
                      description: 'Action to permit or deny the standard large community
                        type. (Key for list: standard)'
                      required: true
                      type: str
                    value:
                      description: 'Value for standard large community type, Type
                        definition for standard large community attributes The large
                        community attribute is represented as GlobalAdministrator;DataPart1;DataPart2
                        GlobalAdministrator; A 4-octet AS number or an IPv4 address
                        DataPart1; The first 4-octet integer DataPart2; The second
                        4-octet integer Some valid examples are; 100;200;300, 4294967294;4294967295;4294967295,
                        1;192.168.0.1;65535 (Key for list: standard)'
                      required: true
                      type: str
                  type: list
              type: list
          type: dict
      type: dict
    policies:
      description: Routing Policy.
      suboptions:
        policy:
          description: Policies with match conditions/set actions.
          elements: dict
          suboptions:
            name:
              description: 'Name of the top-level policy. (Key for list: policy)'
              required: true
              type: str
            statement:
              description: Policy statements group conditions and actions within a
                policy. They are evaluated in the order specified.
              elements: dict
              suboptions:
                action:
                  choices:
                  - deny
                  - permit
                  description: Action to permit or deny the route policy. Default
                    behaviour is deny.
                  required: true
                  type: str
                match:
                  description: Match conditions for routing policy statements.
                  suboptions:
                    additional_paths:
                      description: All or best (2/3) additional paths in the BGP table.
                      required: false
                      type: str
                    as_path:
                      description: BGP AS path list.
                      required: false
                      type: str
                    community:
                      description: Set actions for community
                      elements: dict
                      suboptions:
                        exact_match:
                          description: Do exact matching of communities.
                          required: false
                          type: bool
                        name:
                          description: 'BGP community list. (Key for list: community)'
                          required: true
                          type: str
                      type: list
                    evpn:
                      description: Policy match attributes for EVPN address family.
                      suboptions:
                        route_type:
                          choices:
                          - '1'
                          - 2-mac-ip
                          - 2-mac-only
                          - '3'
                          - '4'
                          - '5'
                          - '6'
                          description: Specifies the route type to be matched for
                            EVPN address family.
                          required: false
                          type: str
                      type: dict
                    ext_community:
                      description: Set actions for EXT community
                      elements: dict
                      suboptions:
                        exact_match:
                          description: Do exact matching of extended communities.
                          required: false
                          type: bool
                        name:
                          description: 'BGP extended community list. (Key for list:
                            ext-community)'
                          required: true
                          type: str
                      type: list
                    interface:
                      description: First hop interface of route.
                      required: false
                      type: str
                    large_community:
                      description: Set actions for large community
                      elements: dict
                      suboptions:
                        exact_match:
                          description: Do exact matching of large communities.
                          required: false
                          type: bool
                        name:
                          description: 'BGP large community list. (Key for list: large-community)'
                          required: true
                          type: str
                      type: list
                    metric:
                      description: Metric of route <0..4294967295>.
                      required: false
                      type: int
                    next_hop:
                      description: Next-hop address of route specified by prefix-list.
                      required: false
                      type: str
                    origin:
                      choices:
                      - egp
                      - igp
                      - incomplete
                      description: Route origin e.g; IGP/EGP.
                      required: false
                      type: str
                    peer:
                      description: Peer address of route specified by prefix-list.
                      required: false
                      type: str
                    route_entry:
                      description: Route-entry of routes specified by prefix-list.
                      required: false
                      type: str
                    route_type:
                      choices:
                      - type-1
                      - type-2
                      description: Route type of the route.
                      required: false
                      type: str
                    tag:
                      description: Tag of route <0..4294967295>.
                      required: false
                      type: int
                  type: dict
                sequence:
                  description: 'Sequence Number to identify the application order
                    for match/set statements. (Key for list: statement)'
                  required: true
                  type: int
                set:
                  description: Set actions for routing policy statements.
                  suboptions:
                    aggregator:
                      description: Set BGP aggregator AS and IP address attribute.
                      elements: dict
                      suboptions:
                        as:
                          description: 'BGP aggregator AS number. (Key for list: aggregator)'
                          required: true
                          type: int
                        ip_address:
                          description: 'BGP Aggregator IP address attribute. (Key
                            for list: aggregator)'
                          required: true
                          type: str
                      type: list
                    aigp_metric:
                      description: Replace or Increment AIGP metric value.
                      elements: dict
                      suboptions:
                        igp_metric:
                          choices:
                          - 'null'
                          description: Internal routing protocol cost.
                          elements: str
                          required: false
                          type: list
                        replace:
                          choices:
                          - replace
                          - increment
                          description: 'Replace or Increment AIGP metric value. (Key
                            for list: aigp-metric)'
                          required: true
                          type: str
                        value:
                          description: AIGP metric value.
                          required: false
                          type: int
                      type: list
                    as_path_prepend:
                      description: BGP AS path number The AS path is represented as
                        a string of AS numbers separated by whitespace, Each AS number
                        can be a 2-byte or 4-byte ASN (Autonomous System Number),
                        within the valid range of 1 to 4294967295 2 byte ASN; Range;
                        1 - 65536 Examples; 100, 1234, 65536 4 byte ASN; Range; 1
                        - 4294967295 Examples; 100, 65536, 4294967295
                      required: false
                      type: str
                    atomic_aggregate:
                      description: BGP atomic aggregator attribute.
                      required: false
                      type: bool
                    color:
                      description: Signifies color attribute associated with a TE
                        path.
                      required: false
                      type: int
                    community:
                      description: Standard or well-known community.
                      elements: dict
                      suboptions:
                        append:
                          choices:
                          - replace
                          - append
                          description: 'Add to the existing community. (Key for list:
                            community)'
                          required: true
                          type: str
                        standard:
                          description: Standard community number, Type definition
                            for standard community attributes; The large community
                            attribute is represented as GlobalAdministrator;DataPart1
                            GlobalAdministrator; A 2-octet AS number or an IPv4 address
                            DataPart1; The first 2-octet integer Some valid examples
                            are; 100;200, 192.168.0.1;100
                          elements: str
                          type: list
                        well_known:
                          choices:
                          - no-export
                          - no-advertise
                          - local-AS
                          - internet
                          description: Well-known community.
                          elements: str
                          required: false
                          type: list
                      type: list
                    community_to_delete:
                      description: Delete matching community List.
                      required: false
                      type: str
                    ext_community_rt:
                      description: Extended community RT list attribute.
                      elements: dict
                      suboptions:
                        append:
                          choices:
                          - replace
                          - append
                          description: 'Add to the existing community. (Key for list:
                            ext-community-rt)'
                          required: true
                          type: str
                        route_target:
                          description: Route target is an AS;NN 8-octet value representing
                            the AS number and the extended community value The encoding
                            pattern is defined as; RT-0 is represented as 0;2-octet-asn;4-octet-number
                            RT-1 is represented as 1;4-octet-ipv4address;2-octet-number
                            RT-2 is represented as 2;4-octet-asn;2-octet-number Some
                            valid examples are; 0;100;100, 1;1.1.1.1;100, 2;2107483647;65135
                          elements: str
                          type: list
                      type: list
                    ext_community_soo:
                      description: Site-of-Origin is an AA;NN 8-octet BGP extended
                        community RFC4360 and RFC5668, the encoding pattern is defined
                        as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number
                        Some valid examples are; 0;100;100, 0;65535;65535 and 1;1.1.1.1;100
                      elements: str
                      type: list
                    isis_level:
                      choices:
                      - level-1
                      - level-2
                      - level-1-2
                      description: IS-IS level to export route.
                      required: false
                      type: str
                    label_index:
                      description: Label Index <0..4294967295>.
                      required: false
                      type: int
                    large_community:
                      description: Standard large community.
                      elements: dict
                      suboptions:
                        append:
                          choices:
                          - replace
                          - append
                          description: 'Add to the existing large community. (Key
                            for list: large-community)'
                          required: true
                          type: str
                        standard:
                          description: Value for standard large community type, Type
                            definition for standard large community attributes; The
                            large community attribute is represented as GlobalAdministrator;DataPart1;DataPart2
                            GlobalAdministrator; A 4-octet AS number or an IPv4 address
                            DataPart1; The first 4-octet integer DataPart2; The second
                            4-octet integer Some valid examples are; 100;200;300,
                            4294967294;4294967295;4294967295, 1;192.168.0.1;65535
                          elements: str
                          type: list
                      type: list
                    large_community_to_delete:
                      description: Delete matching large community List.
                      required: false
                      type: str
                    local_preference:
                      description: BGP local preference path attribute <0..4294967295>.
                      required: false
                      type: int
                    metric:
                      description: Metric value for destination routing protocol.
                        <0..4294967295>
                      required: false
                      type: int
                    metric_type:
                      choices:
                      - external
                      - internal
                      - type-1
                      - type-2
                      description: Metric type of the route.
                      required: false
                      type: str
                    next_hop:
                      description: Set next-hop as A.B.C.D or as a string peer-address.
                        Action for next hop as peer-address or IPv4 address or IPv6
                        global, link-local address.
                      suboptions:
                        ip_address:
                          description: IP address of next hop
                          required: false
                          type: str
                        ipv6_link_local_address:
                          description: IPv6 Link local address as next hop starts
                            with fe80
                          required: false
                          type: str
                        peer_address:
                          choices:
                          - 'null'
                          description: Set Peer adddress as next-hop for BGP
                          elements: str
                          required: false
                          type: list
                      type: dict
                    origin:
                      choices:
                      - egp
                      - igp
                      - incomplete
                      description: Route origin e.g; IGP/EGP.
                      required: false
                      type: str
                    originator_id:
                      description: BGP originator ID attribute.
                      required: false
                      type: str
                    tag:
                      description: Tag value for destination routing protocol <0..4294967295>.
                      required: false
                      type: int
                    vpnv4_next_hop:
                      description: BGP vpnv4 next hop address.
                      required: false
                      type: str
                    weight:
                      description: BGP weight for routing table <0..4294967295>.
                      required: false
                      type: int
                  type: dict
              type: list
          type: list
      type: dict
    prefix_lists:
      description: Prefix List.
      suboptions:
        prefix_list:
          description: Prefix list rules that are used in match conditions under a
            policy
          elements: dict
          suboptions:
            description:
              description: Description of the prefix list.
              required: false
              type: str
            mode:
              choices:
              - ipv4
              - ipv6
              description: IPv4/IPv6 Address family for prefixes.
              required: true
              type: str
            name:
              description: 'Name of the prefix list. This is used as a label to reference
                the set in match conditions. (Key for list: prefix-list)'
              required: true
              type: str
            sequence:
              description: List of unique prefixes identified with sequence number.
              elements: dict
              suboptions:
                action:
                  choices:
                  - deny
                  - permit
                  description: Action to permit or deny the prefix.
                  required: true
                  type: str
                ip_prefix:
                  description: The prefix member in CIDR notation which may be either
                    IPv4 or IPv6.
                  required: true
                  type: str
                mask_range:
                  description: Specify mask length range e.g 21..24 Defines a range
                    for the mask. IPv4 ranges; 0-32 IPv6 ranges; 0-128 Example; 10.3.192.0/21
                    through 10.3.192.0/24 would be expressed as prefix; 10.3.192.0/21,
                    mask-range; 21..24. Example; 6;5;;/121 through 6;5;;/124 would
                    be expressed as prefix; 6;5;;/121, mask-range; 121..124.
                  required: false
                  type: str
                number:
                  description: 'Sequence number to identify the order in which the
                    prefixes will be applied. (Key for list: sequence)'
                  required: true
                  type: int
              type: list
          type: list
      type: dict
  type: dict
