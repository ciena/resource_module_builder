twamp:
  description: TWAMP logical entity configuration grouping of four models which correspond
    to the four TWAMP logical entities Control-Client, Server, Session-Sender, and
    Session-Reflector as illustrated in Fig. 1 of draft-ietf-ippm-twamp-yang.
  suboptions:
    client:
      description: Configuration of the TWAMP Control-Client logical entity.
      suboptions:
        admin_state:
          description: Indicates whether the device is allowed to operate as a TWAMP
            Control-Client.
          required: true
          type: bool
        ctrl_connection:
          description: List of TWAMP Control-Client control connections. Each item
            in the list describes a control connection that will be initiated by this
            Control-Client
          elements: dict
          suboptions:
            client_ip:
              description: The IP address of the local Control-Client device, to be
                placed in the source IP address field of the IP header in TWAMP-Control
                (TCP) packets belonging to this control connection. If not configured,
                the device SHALL choose its own source IP address.
              required: false
              type: str
            control_packet_dscp:
              description: The DSCP value to be placed in the IP header of TWAMP-Control
                (TCP) packets generated by this Control-Client.
              required: false
              type: int
            key_id:
              description: Indicates the KeyID value selected for this TWAMP-Control
                connection.
              required: false
              type: str
            max_count:
              description: This parameter limits the maximum Count value, which MUST
                be a power of 2 and at least 1024 as per RFC 5357. It is configured
                by providing said power. For example, configuring 10 here means max
                count 2^10 = 1024. The default is 15, meaning 2^15 = 32768. A TWAMP
                Server uses this configured value in the Server-Greeting message sent
                to the Control-Client. A TWAMP Control-Client uses this configured
                value to prevent denial-of-service (DOS) attacks by closing the control
                connection to the Server if it 'receives a Server-Greeting message
                with Count greater that its maximum configured value', as per Section
                6 of RFC 5357. Further, note that according to Section 6 of RFC 5357;
                'If an attacking system sets the maximum value in Count (2**32), then
                the system under attack would stall for a significant period of time
                while it attempts to generate keys. TWAMP-compliant systems SHOULD
                have a configuration control to limit the maximum count value. The
                default max-count value SHOULD be 32768.' RFC 5357 does not qualify
                'significant period' in terms of time, but it is clear that this depends
                on the processing capacity available and operators need to pay attention
                to this security consideration.
              required: false
              type: int
            name:
              description: 'A unique name used as a key to identify this individual
                TWAMP-Control connection on the Control-Client device. (Key for list:
                ctrl-connection)'
              required: true
              type: str
            server_ip:
              description: The IP address of the remote Server device, which the TWAMP-Control
                connection will be initiated to.
              required: true
              type: str
            server_tcp_port:
              description: This parameter defines the TCP port number that is to be
                used by this outgoing TWAMP-Control connection. Typically, this is
                the well-known TWAMP-Control port number (862) as per RFC 5357 However,
                there are known realizations of TWAMP in the field that were implemented
                before this well-known port number was allocated. These early implementations
                allowed the port number to be configured. This parameter is therefore
                provided for backward compatibility reasons.
              required: false
              type: int
            test_session_request:
              description: Information associated with the Control-Client for this
                test session
              elements: dict
              suboptions:
                name:
                  description: 'A unique name to be used for identification of this
                    TWAMP-Test session on the Control-Client. (Key for list: test-session-request)'
                  required: true
                  type: str
                padding_length:
                  description: The number of padding bytes to be added to the TWAMP-Test
                    (UDP) packets generated by the Session-Sender. This value will
                    be placed in the Padding Length field of the Request-TW-Session
                    message (RFC 4656, Section 3.5).
                  required: false
                  type: int
                pm_reg_list:
                  description: A list of one or more Performance Metric Registry Index
                    values, which communicate packet stream characteristics along
                    with one or more metrics to be measured. All members of the pm-reg-list
                    MUST have the same stream characteristics, such that they combine
                    to specify all metrics that shall be measured on a single stream.
                  elements: dict
                  suboptions:
                    pm_index:
                      description: 'Numerical index value of a Registered Metric in
                        the Performance Metric Registry (see ietf-ippm-metric-registry).
                        Output statistics are specified in the corresponding Registry
                        entry. (Key for list: pm-reg-list)'
                      required: true
                      type: int
                  type: list
                reflector_ip:
                  description: The IP address belonging to the remote Session-Reflector
                    device to which the TWAMP-Test session will be initiated. This
                    value will be used to populate the receiver address field of the
                    Request-TW-Session message.
                  required: true
                  type: str
                reflector_udp_port:
                  description: This parameter defines the UDP port number that will
                    be used by the Session-Reflector for this TWAMP-Test session.
                    The number is restricted to the dynamic port range and is to be
                    placed in the Receiver Port field of the Request-TW-Session message.
                  required: false
                  type: int
                repeat:
                  description: This value determines if the TWAMP-Test session must
                    be repeated. When a test session has completed, the repeat parameter
                    is checked. The default value of 0 indicates that the session
                    MUST NOT be repeated. If the repeat value is 1 through 4,294,967,294
                    then the test session SHALL be repeated using the information
                    in repeat-interval parameter, and the parent TWAMP-Control connection
                    for this test session is restarted to negotiate a new instance
                    of this TWAMP-Test session. The implementation MUST decrement
                    the value of repeat after determining a repeated session is expected.
                  required: false
                  type: str
                repeat_interval:
                  description: Repeat interval (in seconds).
                  required: false
                  type: int
                sender_ip:
                  description: The IP address of the Session-Sender device, which
                    is to be placed in the source IP address field of the IP header
                    in TWAMP-Test (UDP) packets belonging to this test session. This
                    value will be used to populate the sender address field of the
                    Request-TW-Session message. If not configured, the device SHALL
                    choose its own source IP address.
                  required: false
                  type: str
                sender_udp_port:
                  description: The UDP port number that is to be used by the Session-Sender
                    for this TWAMP-Test session. The number is restricted to the dynamic
                    port range. By default the Control-Client SHALL auto-allocate
                    a UDP port number for this TWAMP-Test session. The configured
                    (or auto-allocated) value is advertized in the Sender Port field
                    of the Request-TW-session message (see Section 3.5 of RFC 5357).
                    Note that in the scenario where a device auto-allocates a UDP
                    port number for a session, and the repeat parameter for that session
                    indicates that it should be repeated, the device is free to auto-allocate
                    a different UDP port number when it negotiates the next (repeated)
                    iteration of this session.
                  required: false
                  type: str
                start_time:
                  description: Time when the session is to be started (but not before
                    the TWAMP Start-Sessions command is issued; see Section 3.4 of
                    RFC 5357). The start-time value is placed in the Start Time field
                    of the Request-TW-Session message. The timestamp format follows
                    RFC 1305 as per Section 3.5 of RFC 4656. The default value of
                    0 indicates that the session will be started as soon as the Start-Sessions
                    message is received.
                  required: false
                  type: int
                test_packet_dscp:
                  description: The DSCP value to be placed in the IP header of TWAMP-Test
                    packets generated by the Session-Sender, and in the UDP header
                    of the TWAMP-Test response packets generated by the Session-Reflector
                    for this test session. This value will be placed in the Type-P
                    Descriptor field of the Request-TW-Session message (RFC 5357).
                  required: false
                  type: int
                timeout:
                  description: The length of time (in seconds) that the Session-Reflector
                    should continue to respond to packets belonging to this TWAMP-Test
                    session after a Stop-Sessions TWAMP-Control message has been received
                    (RFC 5357, Section 3.8). This value will be placed in the Timeout
                    field of the Request-TW-Session message.
                  required: false
                  type: int
              type: list
          type: list
        key_chain:
          description: Relates KeyIDs with their respective secret keys in a TWAMP-Control
            connection.
          elements: dict
          suboptions:
            key_id:
              description: 'KeyID used for a TWAMP-Control connection. As per Section
                3.1 of RFC 4656, KeyID is ''a UTF-8 string, up to 80 octets in length''
                and is used to select which ''shared shared secret the [Control-Client]
                wishes to use to authenticate or encrypt''. (Key for list: key-chain)'
              required: true
              type: str
            secret_key:
              description: The secret key corresponding to the KeyID for this TWAMP-Control
                connection.
              required: false
              type: str
          type: list
        mode_preference_chain:
          description: Indicates the Control-Client preferred order of use of the
            supported TWAMP Modes. Depending on the Modes available in the TWAMP Server
            Greeting message (see Fig. 2 of RFC 7717), the this Control-Client MUST
            choose the highest priority Mode from the configured mode-preference-chain
            list.
          elements: dict
          suboptions:
            mode:
              choices:
              - unauthenticated
              - authenticated
              - encrypted
              - unauth-test-encrpyt-control
              - individual-session-control
              - reflect-octets
              - symmetrical-size
              - IKEv2Derived
              description: The supported TWAMP Mode matching the corresponding priority.
              elements: str
              required: false
              type: list
            priority:
              description: 'Indicates the Control-Client Mode preference priority
                expressed as a 16-bit unsigned integer, where zero is the highest
                priority and subsequent values monotonically increasing. (Key for
                list: mode-preference-chain)'
              required: true
              type: int
          type: list
      type: dict
    server:
      description: Configuration of the TWAMP Server logical entity.
      suboptions:
        admin_state:
          description: Indicates whether the device is allowed to operate as a TWAMP
            Server.
          required: true
          type: bool
        control_packet_dscp:
          description: The DSCP value to be placed in the IP header of TWAMP-Control
            (TCP) packets generated by the Server. Section 3.1 of RFC 5357 specifies
            that the server SHOULD use the DSCP value from the Control-Client's TCP
            SYN. However, for practical purposes TWAMP will typically be implemented
            using a general purpose TCP stack provided by the underlying operating
            system, and such a stack may not provide this information to the user.
            Consequently, it is not always possible to implement the behavior described
            in RFC 5357 in an OS-portable version of TWAMP. The default behavior if
            this item is not set is to use the DSCP value from the Control-Client's
            TCP SYN, as per Section 3.1 of RFC 5357.
          required: false
          type: int
        count:
          description: Parameter communicated to the Control-Client as part of the
            Server Greeting message and used for deriving a key from a shared secret
            as per Section 3.1 of RFC 4656; MUST be a power of 2 and at least 1024.
            It is configured by providing said power. For example, configuring 15
            here means count 2^15 = 32768. The default is 10, meaning 2^10 = 1024.
          required: false
          type: int
        key_chain:
          description: Relates KeyIDs with their respective secret keys in a TWAMP-Control
            connection.
          elements: dict
          suboptions:
            key_id:
              description: 'KeyID used for a TWAMP-Control connection. As per Section
                3.1 of RFC 4656, KeyID is ''a UTF-8 string, up to 80 octets in length''
                and is used to select which ''shared shared secret the [Control-Client]
                wishes to use to authenticate or encrypt''. (Key for list: key-chain)'
              required: true
              type: str
            secret_key:
              description: The secret key corresponding to the KeyID for this TWAMP-Control
                connection.
              required: false
              type: str
          type: list
        max_count:
          description: This parameter limits the maximum Count value, which MUST be
            a power of 2 and at least 1024 as per RFC 5357. It is configured by providing
            said power. For example, configuring 10 here means max count 2^10 = 1024.
            The default is 15, meaning 2^15 = 32768. A TWAMP Server uses this configured
            value in the Server-Greeting message sent to the Control-Client. A TWAMP
            Control-Client uses this configured value to prevent denial-of-service
            (DOS) attacks by closing the control connection to the Server if it 'receives
            a Server-Greeting message with Count greater that its maximum configured
            value', as per Section 6 of RFC 5357. Further, note that according to
            Section 6 of RFC 5357; 'If an attacking system sets the maximum value
            in Count (2**32), then the system under attack would stall for a significant
            period of time while it attempts to generate keys. TWAMP-compliant systems
            SHOULD have a configuration control to limit the maximum count value.
            The default max-count value SHOULD be 32768.' RFC 5357 does not qualify
            'significant period' in terms of time, but it is clear that this depends
            on the processing capacity available and operators need to pay attention
            to this security consideration.
          required: false
          type: int
        modes:
          choices:
          - unauthenticated
          - authenticated
          - encrypted
          - unauth-test-encrpyt-control
          - individual-session-control
          - reflect-octets
          - symmetrical-size
          - IKEv2Derived
          description: The bit mask of TWAMP Modes this Server instance is willing
            to support; see IANA TWAMP Modes Registry.
          elements: str
          required: false
          type: list
        server_tcp_port:
          description: This parameter defines the well known TCP port number that
            is used by TWAMP-Control. The Server will listen on this port number for
            incoming TWAMP-Control connections. Although this is defined as a fixed
            value (862) in RFC 5357, there are several realizations of TWAMP in the
            field that were implemented before this well-known port number was allocated.
            These early implementations allowed the port number to be configured.
            This parameter is therefore provided for backward compatibility reasons.
          required: false
          type: int
        servwait:
          description: TWAMP-Control (TCP) session timeout, in seconds. According
            to Section 3.1 of RFC 5357, Server MAY discontinue any established control
            connection when no packet associated with that connection has been received
            within SERVWAIT seconds.
          required: false
          type: int
      type: dict
    session_reflector:
      description: Configuration of the TWAMP Session-Reflector logical entity
      suboptions:
        admin_state:
          description: Indicates whether the device is allowed to operate as a TWAMP
            Session-Reflector.
          required: true
          type: bool
        refwait:
          description: The Session-Reflector MAY discontinue any session that has
            been started when no packet associated with that session has been received
            for REFWAIT seconds. As per Section 3.1 of RFC 5357, this timeout allows
            a Session-Reflector to free up resources in case of failure.
          required: false
          type: int
      type: dict
    session_sender:
      description: Configuration of the TWAMP Session-Sender logical entity
      suboptions:
        admin_state:
          description: Indicates whether the device is allowed to operate as a TWAMP
            Session-Sender.
          required: true
          type: bool
        test_session:
          description: List of TWAMP Session-Sender test sessions.
          elements: dict
          suboptions:
            fill_mode:
              choices:
              - zero
              - random
              description: Indicates whether the padding added to the TWAMP-Test (UDP)
                packets will contain pseudo-random numbers, or whether it should consist
                of all zeroes, as per Section 4.2.1 of RFC 5357.
              required: false
              type: str
            lambda:
              description: Indicates the average time interval (in seconds) between
                packets in the Poisson distribution. The packet is calculated using
                the reciprocal of lambda and the TWAMP-Test packet size (which depends
                on the selected Mode and the packet padding).
              required: true
              type: float
            max_interval:
              description: Indicates the maximum time (in seconds) between packet
                transmissions.
              required: false
              type: float
            name:
              description: 'A unique name for this TWAMP-Test session to be used for
                identifying this test session by the Session-Sender logical entity.
                (Key for list: test-session)'
              required: true
              type: str
            number_of_packets:
              description: The overall number of TWAMP-Test (UDP) packets to be transmitted
                by the Session-Sender for this test session.
              required: true
              type: int
            periodic_interval:
              description: Indicates the time to wait (in seconds) between the first
                bits of TWAMP-Test (UDP) packet transmissions for this test session
              required: true
              type: float
          type: list
      type: dict
  type: dict
