GENERATOR_VERSION: '2.0'
NETWORK_OS: saos10
RESOURCE: twamp
XML_NAMESPACE: urn:ietf:params:xml:ns:yang:ietf-twamp
XML_ROOT_KEY: twamp
XML_ITEMS: null
XML_ITEMS_KEY: null
ANSIBLE_METADATA:
  metadata_version: '2.0'
  status:
  - preview
  supported_by: network
COPYRIGHT: Copyright 2025 Ciena
DOCUMENTATION:
  module: saos10_twamp
  short_description: Manage twamp on Ciena saos10 devices
  description: TWAMP logical entity configuration grouping of four models which correspond to the four TWAMP logical entities Control-Client,
    Server, Session-Sender, and Session-Reflector as illustrated in Fig. 1 of draft-ietf-ippm-twamp-yang.
  author: Ciena
  options:
    config:
      description: TWAMP logical entity configuration grouping of four models which correspond to the four TWAMP logical entities Control-Client,
        Server, Session-Sender, and Session-Reflector as illustrated in Fig. 1 of draft-ietf-ippm-twamp-yang.
      type: dict
      suboptions:
        client:
          description: Configuration of the TWAMP Control-Client logical entity.
          type: dict
          suboptions:
            admin_state:
              description: Indicates whether the device is allowed to operate as a TWAMP Control-Client.
              type: bool
              required: true
            ctrl_connection:
              description: List of TWAMP Control-Client control connections. Each item in the list describes a control connection that will be
                initiated by this Control-Client
              type: list
              elements: dict
              suboptions:
                name:
                  description: 'A unique name used as a key to identify this individual TWAMP-Control connection on the Control-Client device.
                    (Key for list: ctrl-connection)'
                  type: str
                  required: true
                server_ip:
                  description: The IP address of the remote Server device, which the TWAMP-Control connection will be initiated to.
                  type: str
                  required: true
                client_ip:
                  description: The IP address of the local Control-Client device, to be placed in the source IP address field of the IP header
                    in TWAMP-Control (TCP) packets belonging to this control connection. If not configured, the device SHALL choose its own source
                    IP address.
                  type: str
                  required: false
                control_packet_dscp:
                  description: The DSCP value to be placed in the IP header of TWAMP-Control (TCP) packets generated by this Control-Client.
                  type: int
                  required: false
                key_id:
                  description: Indicates the KeyID value selected for this TWAMP-Control connection.
                  type: str
                  required: false
                max_count:
                  description: This parameter limits the maximum Count value, which MUST be a power of 2 and at least 1024 as per RFC 5357. It
                    is configured by providing said power. For example, configuring 10 here means max count 2^10 = 1024. The default is 15, meaning
                    2^15 = 32768. A TWAMP Server uses this configured value in the Server-Greeting message sent to the Control-Client. A TWAMP
                    Control-Client uses this configured value to prevent denial-of-service (DOS) attacks by closing the control connection to
                    the Server if it 'receives a Server-Greeting message with Count greater that its maximum configured value', as per Section
                    6 of RFC 5357. Further, note that according to Section 6 of RFC 5357; 'If an attacking system sets the maximum value in Count
                    (2**32), then the system under attack would stall for a significant period of time while it attempts to generate keys. TWAMP-compliant
                    systems SHOULD have a configuration control to limit the maximum count value. The default max-count value SHOULD be 32768.'
                    RFC 5357 does not qualify 'significant period' in terms of time, but it is clear that this depends on the processing capacity
                    available and operators need to pay attention to this security consideration.
                  type: int
                  required: false
                server_tcp_port:
                  description: This parameter defines the TCP port number that is to be used by this outgoing TWAMP-Control connection. Typically,
                    this is the well-known TWAMP-Control port number (862) as per RFC 5357 However, there are known realizations of TWAMP in the
                    field that were implemented before this well-known port number was allocated. These early implementations allowed the port
                    number to be configured. This parameter is therefore provided for backward compatibility reasons.
                  type: int
                  required: false
                test_session_request:
                  description: Information associated with the Control-Client for this test session
                  type: list
                  elements: dict
                  suboptions:
                    name:
                      description: 'A unique name to be used for identification of this TWAMP-Test session on the Control-Client. (Key for list:
                        test-session-request)'
                      type: str
                      required: true
                    reflector_ip:
                      description: The IP address belonging to the remote Session-Reflector device to which the TWAMP-Test session will be initiated.
                        This value will be used to populate the receiver address field of the Request-TW-Session message.
                      type: str
                      required: true
                    padding_length:
                      description: The number of padding bytes to be added to the TWAMP-Test (UDP) packets generated by the Session-Sender. This
                        value will be placed in the Padding Length field of the Request-TW-Session message (RFC 4656, Section 3.5).
                      type: int
                      required: false
                    pm_reg_list:
                      description: A list of one or more Performance Metric Registry Index values, which communicate packet stream characteristics
                        along with one or more metrics to be measured. All members of the pm-reg-list MUST have the same stream characteristics,
                        such that they combine to specify all metrics that shall be measured on a single stream.
                      type: list
                      elements: dict
                      suboptions:
                        pm_index:
                          description: 'Numerical index value of a Registered Metric in the Performance Metric Registry (see ietf-ippm-metric-registry).
                            Output statistics are specified in the corresponding Registry entry. (Key for list: pm-reg-list)'
                          type: int
                          required: true
                    reflector_udp_port:
                      description: This parameter defines the UDP port number that will be used by the Session-Reflector for this TWAMP-Test session.
                        The number is restricted to the dynamic port range and is to be placed in the Receiver Port field of the Request-TW-Session
                        message.
                      type: int
                      required: false
                    repeat:
                      description: This value determines if the TWAMP-Test session must be repeated. When a test session has completed, the repeat
                        parameter is checked. The default value of 0 indicates that the session MUST NOT be repeated. If the repeat value is 1
                        through 4,294,967,294 then the test session SHALL be repeated using the information in repeat-interval parameter, and
                        the parent TWAMP-Control connection for this test session is restarted to negotiate a new instance of this TWAMP-Test
                        session. The implementation MUST decrement the value of repeat after determining a repeated session is expected.
                      type: str
                      required: false
                    repeat_interval:
                      description: Repeat interval (in seconds).
                      type: int
                      required: false
                    sender_ip:
                      description: The IP address of the Session-Sender device, which is to be placed in the source IP address field of the IP
                        header in TWAMP-Test (UDP) packets belonging to this test session. This value will be used to populate the sender address
                        field of the Request-TW-Session message. If not configured, the device SHALL choose its own source IP address.
                      type: str
                      required: false
                    sender_udp_port:
                      description: The UDP port number that is to be used by the Session-Sender for this TWAMP-Test session. The number is restricted
                        to the dynamic port range. By default the Control-Client SHALL auto-allocate a UDP port number for this TWAMP-Test session.
                        The configured (or auto-allocated) value is advertized in the Sender Port field of the Request-TW-session message (see
                        Section 3.5 of RFC 5357). Note that in the scenario where a device auto-allocates a UDP port number for a session, and
                        the repeat parameter for that session indicates that it should be repeated, the device is free to auto-allocate a different
                        UDP port number when it negotiates the next (repeated) iteration of this session.
                      type: str
                      required: false
                    start_time:
                      description: Time when the session is to be started (but not before the TWAMP Start-Sessions command is issued; see Section
                        3.4 of RFC 5357). The start-time value is placed in the Start Time field of the Request-TW-Session message. The timestamp
                        format follows RFC 1305 as per Section 3.5 of RFC 4656. The default value of 0 indicates that the session will be started
                        as soon as the Start-Sessions message is received.
                      type: int
                      required: false
                    test_packet_dscp:
                      description: The DSCP value to be placed in the IP header of TWAMP-Test packets generated by the Session-Sender, and in
                        the UDP header of the TWAMP-Test response packets generated by the Session-Reflector for this test session. This value
                        will be placed in the Type-P Descriptor field of the Request-TW-Session message (RFC 5357).
                      type: int
                      required: false
                    timeout:
                      description: The length of time (in seconds) that the Session-Reflector should continue to respond to packets belonging
                        to this TWAMP-Test session after a Stop-Sessions TWAMP-Control message has been received (RFC 5357, Section 3.8). This
                        value will be placed in the Timeout field of the Request-TW-Session message.
                      type: int
                      required: false
            key_chain:
              description: Relates KeyIDs with their respective secret keys in a TWAMP-Control connection.
              type: list
              elements: dict
              suboptions:
                key_id:
                  description: 'KeyID used for a TWAMP-Control connection. As per Section 3.1 of RFC 4656, KeyID is ''a UTF-8 string, up to 80
                    octets in length'' and is used to select which ''shared shared secret the [Control-Client] wishes to use to authenticate or
                    encrypt''. (Key for list: key-chain)'
                  type: str
                  required: true
                secret_key:
                  description: The secret key corresponding to the KeyID for this TWAMP-Control connection.
                  type: str
                  required: false
            mode_preference_chain:
              description: Indicates the Control-Client preferred order of use of the supported TWAMP Modes. Depending on the Modes available
                in the TWAMP Server Greeting message (see Fig. 2 of RFC 7717), the this Control-Client MUST choose the highest priority Mode from
                the configured mode-preference-chain list.
              type: list
              elements: dict
              suboptions:
                priority:
                  description: 'Indicates the Control-Client Mode preference priority expressed as a 16-bit unsigned integer, where zero is the
                    highest priority and subsequent values monotonically increasing. (Key for list: mode-preference-chain)'
                  type: int
                  required: true
                mode:
                  description: The supported TWAMP Mode matching the corresponding priority.
                  type: list
                  required: false
                  elements: str
                  choices:
                  - unauthenticated
                  - authenticated
                  - encrypted
                  - unauth-test-encrpyt-control
                  - individual-session-control
                  - reflect-octets
                  - symmetrical-size
                  - IKEv2Derived
        server:
          description: Configuration of the TWAMP Server logical entity.
          type: dict
          suboptions:
            admin_state:
              description: Indicates whether the device is allowed to operate as a TWAMP Server.
              type: bool
              required: true
            control_packet_dscp:
              description: The DSCP value to be placed in the IP header of TWAMP-Control (TCP) packets generated by the Server. Section 3.1 of
                RFC 5357 specifies that the server SHOULD use the DSCP value from the Control-Client's TCP SYN. However, for practical purposes
                TWAMP will typically be implemented using a general purpose TCP stack provided by the underlying operating system, and such a
                stack may not provide this information to the user. Consequently, it is not always possible to implement the behavior described
                in RFC 5357 in an OS-portable version of TWAMP. The default behavior if this item is not set is to use the DSCP value from the
                Control-Client's TCP SYN, as per Section 3.1 of RFC 5357.
              type: int
              required: false
            count:
              description: Parameter communicated to the Control-Client as part of the Server Greeting message and used for deriving a key from
                a shared secret as per Section 3.1 of RFC 4656; MUST be a power of 2 and at least 1024. It is configured by providing said power.
                For example, configuring 15 here means count 2^15 = 32768. The default is 10, meaning 2^10 = 1024.
              type: int
              required: false
            ctrl_connection:
              description: List of all incoming TWAMP-Control (TCP) connections.
              type: list
              elements: dict
              suboptions: {}
            key_chain:
              description: Relates KeyIDs with their respective secret keys in a TWAMP-Control connection.
              type: list
              elements: dict
              suboptions:
                key_id:
                  description: 'KeyID used for a TWAMP-Control connection. As per Section 3.1 of RFC 4656, KeyID is ''a UTF-8 string, up to 80
                    octets in length'' and is used to select which ''shared shared secret the [Control-Client] wishes to use to authenticate or
                    encrypt''. (Key for list: key-chain)'
                  type: str
                  required: true
                secret_key:
                  description: The secret key corresponding to the KeyID for this TWAMP-Control connection.
                  type: str
                  required: false
            max_count:
              description: This parameter limits the maximum Count value, which MUST be a power of 2 and at least 1024 as per RFC 5357. It is
                configured by providing said power. For example, configuring 10 here means max count 2^10 = 1024. The default is 15, meaning 2^15
                = 32768. A TWAMP Server uses this configured value in the Server-Greeting message sent to the Control-Client. A TWAMP Control-Client
                uses this configured value to prevent denial-of-service (DOS) attacks by closing the control connection to the Server if it 'receives
                a Server-Greeting message with Count greater that its maximum configured value', as per Section 6 of RFC 5357. Further, note that
                according to Section 6 of RFC 5357; 'If an attacking system sets the maximum value in Count (2**32), then the system under attack
                would stall for a significant period of time while it attempts to generate keys. TWAMP-compliant systems SHOULD have a configuration
                control to limit the maximum count value. The default max-count value SHOULD be 32768.' RFC 5357 does not qualify 'significant
                period' in terms of time, but it is clear that this depends on the processing capacity available and operators need to pay attention
                to this security consideration.
              type: int
              required: false
            modes:
              description: The bit mask of TWAMP Modes this Server instance is willing to support; see IANA TWAMP Modes Registry.
              type: list
              required: false
              elements: str
              choices:
              - unauthenticated
              - authenticated
              - encrypted
              - unauth-test-encrpyt-control
              - individual-session-control
              - reflect-octets
              - symmetrical-size
              - IKEv2Derived
            server_tcp_port:
              description: This parameter defines the well known TCP port number that is used by TWAMP-Control. The Server will listen on this
                port number for incoming TWAMP-Control connections. Although this is defined as a fixed value (862) in RFC 5357, there are several
                realizations of TWAMP in the field that were implemented before this well-known port number was allocated. These early implementations
                allowed the port number to be configured. This parameter is therefore provided for backward compatibility reasons.
              type: int
              required: false
            servwait:
              description: TWAMP-Control (TCP) session timeout, in seconds. According to Section 3.1 of RFC 5357, Server MAY discontinue any established
                control connection when no packet associated with that connection has been received within SERVWAIT seconds.
              type: int
              required: false
        session_reflector:
          description: Configuration of the TWAMP Session-Reflector logical entity
          type: dict
          suboptions:
            admin_state:
              description: Indicates whether the device is allowed to operate as a TWAMP Session-Reflector.
              type: bool
              required: true
            refwait:
              description: The Session-Reflector MAY discontinue any session that has been started when no packet associated with that session
                has been received for REFWAIT seconds. As per Section 3.1 of RFC 5357, this timeout allows a Session-Reflector to free up resources
                in case of failure.
              type: int
              required: false
            test_session:
              description: TWAMP Session-Reflectortest sessions.
              type: list
              elements: dict
              suboptions: {}
        session_sender:
          description: Configuration of the TWAMP Session-Sender logical entity
          type: dict
          suboptions:
            admin_state:
              description: Indicates whether the device is allowed to operate as a TWAMP Session-Sender.
              type: bool
              required: true
            test_session:
              description: List of TWAMP Session-Sender test sessions.
              type: list
              elements: dict
              suboptions:
                lambda:
                  description: Indicates the average time interval (in seconds) between packets in the Poisson distribution. The packet is calculated
                    using the reciprocal of lambda and the TWAMP-Test packet size (which depends on the selected Mode and the packet padding).
                  type: float
                  required: true
                name:
                  description: 'A unique name for this TWAMP-Test session to be used for identifying this test session by the Session-Sender logical
                    entity. (Key for list: test-session)'
                  type: str
                  required: true
                number_of_packets:
                  description: The overall number of TWAMP-Test (UDP) packets to be transmitted by the Session-Sender for this test session.
                  type: int
                  required: true
                periodic_interval:
                  description: Indicates the time to wait (in seconds) between the first bits of TWAMP-Test (UDP) packet transmissions for this
                    test session
                  type: float
                  required: true
                fill_mode:
                  description: Indicates whether the padding added to the TWAMP-Test (UDP) packets will contain pseudo-random numbers, or whether
                    it should consist of all zeroes, as per Section 4.2.1 of RFC 5357.
                  type: str
                  required: false
                  choices:
                  - zero
                  - random
                max_interval:
                  description: Indicates the maximum time (in seconds) between packet transmissions.
                  type: float
                  required: false
    state:
      description: The state of the configuration after module completion.
      type: str
      choices:
      - merged
      - deleted
      default: merged
EXAMPLES:
- merged_example_01.txt
- deleted_example_01.txt
notes:
- This module requires the netconf system service be enabled on the remote device being managed.
- This module works with connection C(netconf)
requirements:
- ncclient (>=v0.6.4)
