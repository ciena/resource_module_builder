GENERATOR_VERSION: '2.0'
NETWORK_OS: saos10
RESOURCE: routing-policy
XML_NAMESPACE: http://ciena.com/ns/yang/ciena/ciena-routing-policy
XML_ROOT_KEY: routing-policy
XML_ITEMS: null
XML_ITEMS_KEY: null
ANSIBLE_METADATA:
  metadata_version: '2.0'
  status:
  - preview
  supported_by: network
COPYRIGHT: Copyright 2025 Ciena
DOCUMENTATION:
  module: saos10_routing_policy
  short_description: Manage routing-policy on Ciena saos10 devices
  description: Policy based routing
  author: Ciena
  options:
    config:
      description: Policy based routing
      type: dict
      suboptions:
        bgp:
          description: BGP communities, extended communities, as-path and large-community-lists.
          type: dict
          suboptions:
            as_path_lists:
              description: AS path list.
              type: dict
              suboptions:
                as_path_list:
                  description: AS paths that are used in match conditions under policy.
                  type: list
                  elements: dict
                  suboptions:
                    name:
                      description: 'Name of the AS path list. (Key for list: as-path-list)'
                      type: str
                      required: true
                    member:
                      description: AS paths member list to permit/deny a regular-expression.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the extended AS path list. (Key for list: member)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Regular-expression to match the BGP AS paths. (Key for list: member)'
                          type: str
                          required: true
            community_lists:
              description: Community List.
              type: dict
              suboptions:
                community_list:
                  description: Communities that are used in match conditions under policy.
                  type: list
                  elements: dict
                  suboptions:
                    name:
                      description: 'Name of the community list. (Key for list: community-list)'
                      type: str
                      required: true
                    regex:
                      description: Permit or deny a commmunity with matching regular expression.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny community matching regular expression. (Key for list: regex)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Regular expression for matching commmunity. (Key for list: regex)'
                          type: str
                          required: true
                    standard:
                      description: Permit or deny a standard commmunity type.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the standard community type. (Key for list: standard)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for standard community type. (Key for list: standard)'
                          type: str
                          required: true
                    well_known:
                      description: Permit or deny a well-known commmunity type.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the well-known community type. (Key for list: well-known)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for well-known community type. (Key for list: well-known)'
                          type: list
                          required: true
                          elements: str
                          choices:
                          - no-export
                          - no-advertise
                          - local-AS
                          - internet
            ext_community_lists:
              description: Extended community list.
              type: dict
              suboptions:
                ext_community_list:
                  description: Extended communities that are used in match conditions under policy.
                  type: list
                  elements: dict
                  suboptions:
                    name:
                      description: 'Name of the extended community list. (Key for list: ext-community-list)'
                      type: str
                      required: true
                    color:
                      description: Permit or deny a color extended community.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the extended community type. (Key for list: color)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for color extended community. (Key for list: color)'
                          type: int
                          required: true
                    regex:
                      description: Permit or deny extended community with matching regular expression.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the extended community with matching regular expression. (Key for list: regex)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Regular expression for matching extended community. (Key for list: regex)'
                          type: str
                          required: true
                    route_target:
                      description: Permit or deny a route target extended community.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the extended community type. (Key for list: route-target)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for route target or site of origin. (Key for list: route-target)'
                          type: str
                          required: true
                    site_of_origin:
                      description: Permit or deny a site of origin extended community.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the extended community type. (Key for list: site-of-origin)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for site of origin extended community. (Key for list: site-of-origin)'
                          type: str
                          required: true
            large_community_lists:
              description: Large community List.
              type: dict
              suboptions:
                large_community_list:
                  description: Large communities that are used in match conditions under policy.
                  type: list
                  elements: dict
                  suboptions:
                    name:
                      description: 'Name of the large community list. (Key for list: large-community-list)'
                      type: str
                      required: true
                    regex:
                      description: Permit or deny a large commmunity with matching regular expression.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny large community matching regular expression. (Key for list: regex)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Regular expression for matching large commmunity. (Key for list: regex)'
                          type: str
                          required: true
                    standard:
                      description: Permit or deny a standard large commmunity type.
                      type: list
                      elements: dict
                      suboptions:
                        action:
                          description: 'Action to permit or deny the standard large community type. (Key for list: standard)'
                          type: str
                          required: true
                          choices:
                          - deny
                          - permit
                        value:
                          description: 'Value for standard large community type, Type definition for standard large community attributes The large
                            community attribute is represented as GlobalAdministrator;DataPart1;DataPart2 GlobalAdministrator; A 4-octet AS number
                            or an IPv4 address DataPart1; The first 4-octet integer DataPart2; The second 4-octet integer Some valid examples
                            are; 100;200;300, 4294967294;4294967295;4294967295, 1;192.168.0.1;65535 (Key for list: standard)'
                          type: str
                          required: true
        policies:
          description: Routing Policy.
          type: dict
          suboptions:
            policy:
              description: Policies with match conditions/set actions.
              type: list
              elements: dict
              suboptions:
                name:
                  description: 'Name of the top-level policy. (Key for list: policy)'
                  type: str
                  required: true
                statement:
                  description: Policy statements group conditions and actions within a policy. They are evaluated in the order specified.
                  type: list
                  elements: dict
                  suboptions:
                    action:
                      description: Action to permit or deny the route policy. Default behaviour is deny.
                      type: str
                      required: true
                      choices:
                      - deny
                      - permit
                    sequence:
                      description: 'Sequence Number to identify the application order for match/set statements. (Key for list: statement)'
                      type: int
                      required: true
                    match:
                      description: Match conditions for routing policy statements.
                      type: dict
                      suboptions:
                        additional_paths:
                          description: All or best (2/3) additional paths in the BGP table.
                          type: str
                          required: false
                        as_path:
                          description: BGP AS path list.
                          type: str
                          required: false
                        community:
                          description: Set actions for community
                          type: list
                          elements: dict
                          suboptions:
                            name:
                              description: 'BGP community list. (Key for list: community)'
                              type: str
                              required: true
                            exact_match:
                              description: Do exact matching of communities.
                              type: bool
                              required: false
                        evpn:
                          description: Policy match attributes for EVPN address family.
                          type: dict
                          suboptions:
                            route_type:
                              description: Specifies the route type to be matched for EVPN address family.
                              type: str
                              required: false
                              choices:
                              - '1'
                              - 2-mac-ip
                              - 2-mac-only
                              - '3'
                              - '4'
                              - '5'
                              - '6'
                        ext_community:
                          description: Set actions for EXT community
                          type: list
                          elements: dict
                          suboptions:
                            name:
                              description: 'BGP extended community list. (Key for list: ext-community)'
                              type: str
                              required: true
                            exact_match:
                              description: Do exact matching of extended communities.
                              type: bool
                              required: false
                        interface:
                          description: First hop interface of route.
                          type: str
                          required: false
                        large_community:
                          description: Set actions for large community
                          type: list
                          elements: dict
                          suboptions:
                            name:
                              description: 'BGP large community list. (Key for list: large-community)'
                              type: str
                              required: true
                            exact_match:
                              description: Do exact matching of large communities.
                              type: bool
                              required: false
                        metric:
                          description: Metric of route <0..4294967295>.
                          type: int
                          required: false
                        next_hop:
                          description: Next-hop address of route specified by prefix-list.
                          type: str
                          required: false
                        origin:
                          description: Route origin e.g; IGP/EGP.
                          type: str
                          required: false
                          choices:
                          - egp
                          - igp
                          - incomplete
                        peer:
                          description: Peer address of route specified by prefix-list.
                          type: str
                          required: false
                        route_entry:
                          description: Route-entry of routes specified by prefix-list.
                          type: str
                          required: false
                        route_type:
                          description: Route type of the route.
                          type: str
                          required: false
                          choices:
                          - type-1
                          - type-2
                        tag:
                          description: Tag of route <0..4294967295>.
                          type: int
                          required: false
                    set:
                      description: Set actions for routing policy statements.
                      type: dict
                      suboptions:
                        aggregator:
                          description: Set BGP aggregator AS and IP address attribute.
                          type: list
                          elements: dict
                          suboptions:
                            as:
                              description: 'BGP aggregator AS number. (Key for list: aggregator)'
                              type: int
                              required: true
                            ip_address:
                              description: 'BGP Aggregator IP address attribute. (Key for list: aggregator)'
                              type: str
                              required: true
                        aigp_metric:
                          description: Replace or Increment AIGP metric value.
                          type: list
                          elements: dict
                          suboptions:
                            replace:
                              description: 'Replace or Increment AIGP metric value. (Key for list: aigp-metric)'
                              type: str
                              required: true
                              choices:
                              - replace
                              - increment
                            igp_metric:
                              description: Internal routing protocol cost.
                              type: list
                              required: false
                              elements: str
                              choices:
                              - 'null'
                            value:
                              description: AIGP metric value.
                              type: int
                              required: false
                        as_path_prepend:
                          description: BGP AS path number The AS path is represented as a string of AS numbers separated by whitespace, Each AS
                            number can be a 2-byte or 4-byte ASN (Autonomous System Number), within the valid range of 1 to 4294967295 2 byte
                            ASN; Range; 1 - 65536 Examples; 100, 1234, 65536 4 byte ASN; Range; 1 - 4294967295 Examples; 100, 65536, 4294967295
                          type: str
                          required: false
                        atomic_aggregate:
                          description: BGP atomic aggregator attribute.
                          type: bool
                          required: false
                        color:
                          description: Signifies color attribute associated with a TE path.
                          type: int
                          required: false
                        community:
                          description: Standard or well-known community.
                          type: list
                          elements: dict
                          suboptions:
                            append:
                              description: 'Add to the existing community. (Key for list: community)'
                              type: str
                              required: true
                              choices:
                              - replace
                              - append
                            standard:
                              description: Standard community number, Type definition for standard community attributes; The large community attribute
                                is represented as GlobalAdministrator;DataPart1 GlobalAdministrator; A 2-octet AS number or an IPv4 address DataPart1;
                                The first 2-octet integer Some valid examples are; 100;200, 192.168.0.1;100
                              type: list
                              elements: str
                            well_known:
                              description: Well-known community.
                              type: list
                              required: false
                              elements: str
                              choices:
                              - no-export
                              - no-advertise
                              - local-AS
                              - internet
                        community_to_delete:
                          description: Delete matching community List.
                          type: str
                          required: false
                        ext_community_rt:
                          description: Extended community RT list attribute.
                          type: list
                          elements: dict
                          suboptions:
                            append:
                              description: 'Add to the existing community. (Key for list: ext-community-rt)'
                              type: str
                              required: true
                              choices:
                              - replace
                              - append
                            route_target:
                              description: Route target is an AS;NN 8-octet value representing the AS number and the extended community value
                                The encoding pattern is defined as; RT-0 is represented as 0;2-octet-asn;4-octet-number RT-1 is represented as
                                1;4-octet-ipv4address;2-octet-number RT-2 is represented as 2;4-octet-asn;2-octet-number Some valid examples are;
                                0;100;100, 1;1.1.1.1;100, 2;2107483647;65135
                              type: list
                              elements: str
                        ext_community_soo:
                          description: Site-of-Origin is an AA;NN 8-octet BGP extended community RFC4360 and RFC5668, the encoding pattern is
                            defined as; 0;2-octet-asn;4-octet-number 1;4-octet-ipv4addr;2-octet-number Some valid examples are; 0;100;100, 0;65535;65535
                            and 1;1.1.1.1;100
                          type: list
                          elements: str
                        isis_level:
                          description: IS-IS level to export route.
                          type: str
                          required: false
                          choices:
                          - level-1
                          - level-2
                          - level-1-2
                        label_index:
                          description: Label Index <0..4294967295>.
                          type: int
                          required: false
                        large_community:
                          description: Standard large community.
                          type: list
                          elements: dict
                          suboptions:
                            append:
                              description: 'Add to the existing large community. (Key for list: large-community)'
                              type: str
                              required: true
                              choices:
                              - replace
                              - append
                            standard:
                              description: Value for standard large community type, Type definition for standard large community attributes; The
                                large community attribute is represented as GlobalAdministrator;DataPart1;DataPart2 GlobalAdministrator; A 4-octet
                                AS number or an IPv4 address DataPart1; The first 4-octet integer DataPart2; The second 4-octet integer Some valid
                                examples are; 100;200;300, 4294967294;4294967295;4294967295, 1;192.168.0.1;65535
                              type: list
                              elements: str
                        large_community_to_delete:
                          description: Delete matching large community List.
                          type: str
                          required: false
                        local_preference:
                          description: BGP local preference path attribute <0..4294967295>.
                          type: int
                          required: false
                        metric:
                          description: Metric value for destination routing protocol. <0..4294967295>
                          type: int
                          required: false
                        metric_type:
                          description: Metric type of the route.
                          type: str
                          required: false
                          choices:
                          - external
                          - internal
                          - type-1
                          - type-2
                        next_hop:
                          description: Set next-hop as A.B.C.D or as a string peer-address. Action for next hop as peer-address or IPv4 address
                            or IPv6 global, link-local address.
                          type: dict
                          suboptions:
                            ip_address:
                              description: IP address of next hop
                              type: str
                              required: false
                            ipv6_link_local_address:
                              description: IPv6 Link local address as next hop starts with fe80
                              type: str
                              required: false
                            peer_address:
                              description: Set Peer adddress as next-hop for BGP
                              type: list
                              required: false
                              elements: str
                              choices:
                              - 'null'
                        origin:
                          description: Route origin e.g; IGP/EGP.
                          type: str
                          required: false
                          choices:
                          - egp
                          - igp
                          - incomplete
                        originator_id:
                          description: BGP originator ID attribute.
                          type: str
                          required: false
                        tag:
                          description: Tag value for destination routing protocol <0..4294967295>.
                          type: int
                          required: false
                        vpnv4_next_hop:
                          description: BGP vpnv4 next hop address.
                          type: str
                          required: false
                        weight:
                          description: BGP weight for routing table <0..4294967295>.
                          type: int
                          required: false
        prefix_lists:
          description: Prefix List.
          type: dict
          suboptions:
            prefix_list:
              description: Prefix list rules that are used in match conditions under a policy
              type: list
              elements: dict
              suboptions:
                mode:
                  description: IPv4/IPv6 Address family for prefixes.
                  type: str
                  required: true
                  choices:
                  - ipv4
                  - ipv6
                name:
                  description: 'Name of the prefix list. This is used as a label to reference the set in match conditions. (Key for list: prefix-list)'
                  type: str
                  required: true
                description:
                  description: Description of the prefix list.
                  type: str
                  required: false
                sequence:
                  description: List of unique prefixes identified with sequence number.
                  type: list
                  elements: dict
                  suboptions:
                    action:
                      description: Action to permit or deny the prefix.
                      type: str
                      required: true
                      choices:
                      - deny
                      - permit
                    ip_prefix:
                      description: The prefix member in CIDR notation which may be either IPv4 or IPv6.
                      type: str
                      required: true
                    number:
                      description: 'Sequence number to identify the order in which the prefixes will be applied. (Key for list: sequence)'
                      type: int
                      required: true
                    mask_range:
                      description: Specify mask length range e.g 21..24 Defines a range for the mask. IPv4 ranges; 0-32 IPv6 ranges; 0-128 Example;
                        10.3.192.0/21 through 10.3.192.0/24 would be expressed as prefix; 10.3.192.0/21, mask-range; 21..24. Example; 6;5;;/121
                        through 6;5;;/124 would be expressed as prefix; 6;5;;/121, mask-range; 121..124.
                      type: str
                      required: false
    state:
      description: The state of the configuration after module completion.
      type: str
      choices:
      - merged
      - deleted
      default: merged
EXAMPLES:
- merged_example_01.txt
- deleted_example_01.txt
notes:
- This module requires the netconf system service be enabled on the remote device being managed.
- This module works with connection C(netconf)
requirements:
- ncclient (>=v0.6.4)
